//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSDictionaryControllerKeyValuePair;

    unsafe impl ClassType for NSDictionaryControllerKeyValuePair {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSDictionaryControllerKeyValuePair")]
    unsafe impl NSDictionaryControllerKeyValuePair {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other key)]
        pub unsafe fn key(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setKey:)]
        pub unsafe fn setKey(&self, key: Option<&Foundation::NSString>);

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Option<Id<Object, Shared>>;

        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: Option<&Object>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other localizedKey)]
        pub unsafe fn localizedKey(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLocalizedKey:)]
        pub unsafe fn setLocalizedKey(&self, localizedKey: Option<&Foundation::NSString>);

        #[method(isExplicitlyIncluded)]
        pub unsafe fn isExplicitlyIncluded(&self) -> bool;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSDictionaryController;

    unsafe impl ClassType for NSDictionaryController {
        #[inherits(AppKit::NSObjectController, AppKit::NSController, NSObject)]
        type Super = AppKit::NSArrayController;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSDictionaryController")]
    unsafe impl NSDictionaryController {
        #[cfg(feature = "AppKit_NSDictionaryControllerKeyValuePair")]
        #[method_id(@__retain_semantics New newObject)]
        pub unsafe fn newObject(&self) -> Id<AppKit::NSDictionaryControllerKeyValuePair, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other initialKey)]
        pub unsafe fn initialKey(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setInitialKey:)]
        pub unsafe fn setInitialKey(&self, initialKey: &Foundation::NSString);

        #[method_id(@__retain_semantics Other initialValue)]
        pub unsafe fn initialValue(&self) -> Id<Object, Shared>;

        #[method(setInitialValue:)]
        pub unsafe fn setInitialValue(&self, initialValue: &Object);

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other includedKeys)]
        pub unsafe fn includedKeys(&self) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method(setIncludedKeys:)]
        pub unsafe fn setIncludedKeys(
            &self,
            includedKeys: &Foundation::NSArray<Foundation::NSString>,
        );

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other excludedKeys)]
        pub unsafe fn excludedKeys(&self) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method(setExcludedKeys:)]
        pub unsafe fn setExcludedKeys(
            &self,
            excludedKeys: &Foundation::NSArray<Foundation::NSString>,
        );

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other localizedKeyDictionary)]
        pub unsafe fn localizedKeyDictionary(
            &self,
        ) -> Id<Foundation::NSDictionary<Foundation::NSString, Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method(setLocalizedKeyDictionary:)]
        pub unsafe fn setLocalizedKeyDictionary(
            &self,
            localizedKeyDictionary: &Foundation::NSDictionary<
                Foundation::NSString,
                Foundation::NSString,
            >,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other localizedKeyTable)]
        pub unsafe fn localizedKeyTable(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLocalizedKeyTable:)]
        pub unsafe fn setLocalizedKeyTable(&self, localizedKeyTable: Option<&Foundation::NSString>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObjectController`
    #[cfg(feature = "AppKit_NSDictionaryController")]
    unsafe impl AppKit::NSDictionaryController {
        #[method_id(@__retain_semantics Init initWithContent:)]
        pub unsafe fn initWithContent(
            this: Option<Allocated<Self>>,
            content: Option<&Object>,
        ) -> Id<Self, Shared>;
    }
);
