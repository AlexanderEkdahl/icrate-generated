//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

ns_options!(
    #[underlying(NSUInteger)]
    pub enum NSPrintPanelOptions {
        NSPrintPanelShowsCopies = 1 << 0,
        NSPrintPanelShowsPageRange = 1 << 1,
        NSPrintPanelShowsPaperSize = 1 << 2,
        NSPrintPanelShowsOrientation = 1 << 3,
        NSPrintPanelShowsScaling = 1 << 4,
        NSPrintPanelShowsPrintSelection = 1 << 5,
        NSPrintPanelShowsPageSetupAccessory = 1 << 8,
        NSPrintPanelShowsPreview = 1 << 17,
    }
);

typed_enum!(
    pub type NSPrintPanelJobStyleHint = Foundation::NSString;
);

extern_static!(NSPrintPhotoJobStyleHint: &'static AppKit::NSPrintPanelJobStyleHint);

extern_static!(NSPrintAllPresetsJobStyleHint: &'static AppKit::NSPrintPanelJobStyleHint);

extern_static!(NSPrintNoPresetsJobStyleHint: &'static AppKit::NSPrintPanelJobStyleHint);

typed_enum!(
    pub type NSPrintPanelAccessorySummaryKey = Foundation::NSString;
);

extern_static!(
    NSPrintPanelAccessorySummaryItemNameKey: &'static AppKit::NSPrintPanelAccessorySummaryKey
);

extern_static!(
    NSPrintPanelAccessorySummaryItemDescriptionKey:
        &'static AppKit::NSPrintPanelAccessorySummaryKey
);

extern_protocol!(
    pub struct NSPrintPanelAccessorizing;

    unsafe impl ProtocolType for NSPrintPanelAccessorizing {
        #[method_id(@__retain_semantics Other localizedSummaryItems)]
        pub unsafe fn localizedSummaryItems(
            &self,
        ) -> Id<
            Foundation::NSArray<
                Foundation::NSDictionary<
                    AppKit::NSPrintPanelAccessorySummaryKey,
                    Foundation::NSString,
                >,
            >,
            Shared,
        >;

        #[optional]
        #[method_id(@__retain_semantics Other keyPathsForValuesAffectingPreview)]
        pub unsafe fn keyPathsForValuesAffectingPreview(
            &self,
        ) -> Id<Foundation::NSSet<Foundation::NSString>, Shared>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPrintPanel;

    unsafe impl ClassType for NSPrintPanel {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSPrintPanel")]
    unsafe impl NSPrintPanel {
        #[method_id(@__retain_semantics Other printPanel)]
        pub unsafe fn printPanel() -> Id<AppKit::NSPrintPanel, Shared>;

        #[cfg(feature = "AppKit_NSViewController")]
        #[method(addAccessoryController:)]
        pub unsafe fn addAccessoryController(&self, accessoryController: &AppKit::NSViewController);

        #[cfg(feature = "AppKit_NSViewController")]
        #[method(removeAccessoryController:)]
        pub unsafe fn removeAccessoryController(
            &self,
            accessoryController: &AppKit::NSViewController,
        );

        #[cfg(all(feature = "AppKit_NSViewController", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other accessoryControllers)]
        pub unsafe fn accessoryControllers(
            &self,
        ) -> Id<Foundation::NSArray<AppKit::NSViewController>, Shared>;

        #[method(options)]
        pub unsafe fn options(&self) -> NSPrintPanelOptions;

        #[method(setOptions:)]
        pub unsafe fn setOptions(&self, options: NSPrintPanelOptions);

        #[cfg(feature = "Foundation_NSString")]
        #[method(setDefaultButtonTitle:)]
        pub unsafe fn setDefaultButtonTitle(
            &self,
            defaultButtonTitle: Option<&Foundation::NSString>,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other defaultButtonTitle)]
        pub unsafe fn defaultButtonTitle(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[method_id(@__retain_semantics Other helpAnchor)]
        pub unsafe fn helpAnchor(&self) -> Option<Id<AppKit::NSHelpAnchorName, Shared>>;

        #[method(setHelpAnchor:)]
        pub unsafe fn setHelpAnchor(&self, helpAnchor: Option<&AppKit::NSHelpAnchorName>);

        #[method_id(@__retain_semantics Other jobStyleHint)]
        pub unsafe fn jobStyleHint(&self) -> Option<Id<AppKit::NSPrintPanelJobStyleHint, Shared>>;

        #[method(setJobStyleHint:)]
        pub unsafe fn setJobStyleHint(
            &self,
            jobStyleHint: Option<&AppKit::NSPrintPanelJobStyleHint>,
        );

        #[cfg(all(feature = "AppKit_NSPrintInfo", feature = "AppKit_NSWindow"))]
        #[method(beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:)]
        pub unsafe fn beginSheetWithPrintInfo_modalForWindow_delegate_didEndSelector_contextInfo(
            &self,
            printInfo: &AppKit::NSPrintInfo,
            docWindow: &AppKit::NSWindow,
            delegate: Option<&Object>,
            didEndSelector: Option<Sel>,
            contextInfo: *mut c_void,
        );

        #[cfg(feature = "AppKit_NSPrintInfo")]
        #[method(runModalWithPrintInfo:)]
        pub unsafe fn runModalWithPrintInfo(&self, printInfo: &AppKit::NSPrintInfo) -> NSInteger;

        #[method(runModal)]
        pub unsafe fn runModal(&self) -> NSInteger;

        #[cfg(feature = "AppKit_NSPrintInfo")]
        #[method_id(@__retain_semantics Other printInfo)]
        pub unsafe fn printInfo(&self) -> Id<AppKit::NSPrintInfo, Shared>;
    }
);

extern_methods!(
    /// NSDeprecated
    #[cfg(feature = "AppKit_NSPrintPanel")]
    unsafe impl NSPrintPanel {
        #[cfg(feature = "AppKit_NSView")]
        #[method(setAccessoryView:)]
        pub unsafe fn setAccessoryView(&self, accessoryView: Option<&AppKit::NSView>);

        #[cfg(feature = "AppKit_NSView")]
        #[method_id(@__retain_semantics Other accessoryView)]
        pub unsafe fn accessoryView(&self) -> Option<Id<AppKit::NSView, Shared>>;

        #[method(updateFromPrintInfo)]
        pub unsafe fn updateFromPrintInfo(&self);

        #[method(finalWritePrintInfo)]
        pub unsafe fn finalWritePrintInfo(&self);
    }
);
