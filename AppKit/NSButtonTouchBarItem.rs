//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSButtonTouchBarItem;

    unsafe impl ClassType for NSButtonTouchBarItem {
        #[inherits(NSObject)]
        type Super = AppKit::NSTouchBarItem;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSButtonTouchBarItem")]
    unsafe impl NSButtonTouchBarItem {
        #[cfg(all(
            feature = "AppKit_NSTouchBarItemIdentifier",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other buttonTouchBarItemWithIdentifier:title:target:action:)]
        pub unsafe fn buttonTouchBarItemWithIdentifier_title_target_action(
            identifier: &AppKit::NSTouchBarItemIdentifier,
            title: &Foundation::NSString,
            target: Option<&Object>,
            action: Option<Sel>,
        ) -> Id<Self, Shared>;

        #[cfg(all(
            feature = "AppKit_NSImage",
            feature = "AppKit_NSTouchBarItemIdentifier"
        ))]
        #[method_id(@__retain_semantics Other buttonTouchBarItemWithIdentifier:image:target:action:)]
        pub unsafe fn buttonTouchBarItemWithIdentifier_image_target_action(
            identifier: &AppKit::NSTouchBarItemIdentifier,
            image: &AppKit::NSImage,
            target: Option<&Object>,
            action: Option<Sel>,
        ) -> Id<Self, Shared>;

        #[cfg(all(
            feature = "AppKit_NSImage",
            feature = "AppKit_NSTouchBarItemIdentifier",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other buttonTouchBarItemWithIdentifier:title:image:target:action:)]
        pub unsafe fn buttonTouchBarItemWithIdentifier_title_image_target_action(
            identifier: &AppKit::NSTouchBarItemIdentifier,
            title: &Foundation::NSString,
            image: &AppKit::NSImage,
            target: Option<&Object>,
            action: Option<Sel>,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: &Foundation::NSString);

        #[cfg(feature = "AppKit_NSImage")]
        #[method_id(@__retain_semantics Other image)]
        pub unsafe fn image(&self) -> Option<Id<AppKit::NSImage, Shared>>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&AppKit::NSImage>);

        #[cfg(feature = "AppKit_NSColor")]
        #[method_id(@__retain_semantics Other bezelColor)]
        pub unsafe fn bezelColor(&self) -> Option<Id<AppKit::NSColor, Shared>>;

        #[cfg(feature = "AppKit_NSColor")]
        #[method(setBezelColor:)]
        pub unsafe fn setBezelColor(&self, bezelColor: Option<&AppKit::NSColor>);

        #[method_id(@__retain_semantics Other target)]
        pub unsafe fn target(&self) -> Option<Id<Object, Shared>>;

        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&Object>);

        #[method(action)]
        pub unsafe fn action(&self) -> Option<Sel>;

        #[method(setAction:)]
        pub unsafe fn setAction(&self, action: Option<Sel>);

        #[method(isEnabled)]
        pub unsafe fn isEnabled(&self) -> bool;

        #[method(setEnabled:)]
        pub unsafe fn setEnabled(&self, enabled: bool);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other customizationLabel)]
        pub unsafe fn customizationLabel(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setCustomizationLabel:)]
        pub unsafe fn setCustomizationLabel(
            &self,
            customizationLabel: Option<&Foundation::NSString>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSButtonTouchBarItem")]
    unsafe impl AppKit::NSButtonTouchBarItem {
        #[cfg(feature = "AppKit_NSTouchBarItemIdentifier")]
        #[method_id(@__retain_semantics Init initWithIdentifier:)]
        pub unsafe fn initWithIdentifier(
            this: Option<Allocated<Self>>,
            identifier: &AppKit::NSTouchBarItemIdentifier,
        ) -> Id<Self, Shared>;
    }
);
