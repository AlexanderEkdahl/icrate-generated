//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSUserInterfaceCompressionOptions;

    unsafe impl ClassType for NSUserInterfaceCompressionOptions {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSUserInterfaceCompressionOptions")]
    unsafe impl NSUserInterfaceCompressionOptions {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &Foundation::NSCoder,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithIdentifier:)]
        pub unsafe fn initWithIdentifier(
            this: Option<Allocated<Self>>,
            identifier: &Foundation::NSString,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSSet")]
        #[method_id(@__retain_semantics Init initWithCompressionOptions:)]
        pub unsafe fn initWithCompressionOptions(
            this: Option<Allocated<Self>>,
            options: &Foundation::NSSet<AppKit::NSUserInterfaceCompressionOptions>,
        ) -> Id<Self, Shared>;

        #[method(containsOptions:)]
        pub unsafe fn containsOptions(
            &self,
            options: &AppKit::NSUserInterfaceCompressionOptions,
        ) -> bool;

        #[method(intersectsOptions:)]
        pub unsafe fn intersectsOptions(
            &self,
            options: &AppKit::NSUserInterfaceCompressionOptions,
        ) -> bool;

        #[method(isEmpty)]
        pub unsafe fn isEmpty(&self) -> bool;

        #[method_id(@__retain_semantics Other optionsByAddingOptions:)]
        pub unsafe fn optionsByAddingOptions(
            &self,
            options: &AppKit::NSUserInterfaceCompressionOptions,
        ) -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other optionsByRemovingOptions:)]
        pub unsafe fn optionsByRemovingOptions(
            &self,
            options: &AppKit::NSUserInterfaceCompressionOptions,
        ) -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other hideImagesOption)]
        pub unsafe fn hideImagesOption() -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other hideTextOption)]
        pub unsafe fn hideTextOption() -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other reduceMetricsOption)]
        pub unsafe fn reduceMetricsOption() -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other breakEqualWidthsOption)]
        pub unsafe fn breakEqualWidthsOption(
        ) -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;

        #[method_id(@__retain_semantics Other standardOptions)]
        pub unsafe fn standardOptions() -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;
    }
);

extern_protocol!(
    pub struct NSUserInterfaceCompression;

    unsafe impl ProtocolType for NSUserInterfaceCompression {
        #[method(compressWithPrioritizedCompressionOptions:)]
        pub unsafe fn compressWithPrioritizedCompressionOptions(
            &self,
            prioritizedOptions: &Foundation::NSArray<AppKit::NSUserInterfaceCompressionOptions>,
        );

        #[method(minimumSizeWithPrioritizedCompressionOptions:)]
        pub unsafe fn minimumSizeWithPrioritizedCompressionOptions(
            &self,
            prioritizedOptions: &Foundation::NSArray<AppKit::NSUserInterfaceCompressionOptions>,
        ) -> NSSize;

        #[method_id(@__retain_semantics Other activeCompressionOptions)]
        pub unsafe fn activeCompressionOptions(
            &self,
        ) -> Id<AppKit::NSUserInterfaceCompressionOptions, Shared>;
    }
);
