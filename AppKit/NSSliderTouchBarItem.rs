//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

typed_extensible_enum!(
    pub type NSSliderAccessoryWidth = Foundation::CGFloat;
);

extern_static!(NSSliderAccessoryWidthDefault: AppKit::NSSliderAccessoryWidth);

extern_static!(NSSliderAccessoryWidthWide: AppKit::NSSliderAccessoryWidth);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSSliderTouchBarItem;

    unsafe impl ClassType for NSSliderTouchBarItem {
        #[inherits(NSObject)]
        type Super = AppKit::NSTouchBarItem;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    unsafe impl NSSliderTouchBarItem {
        #[cfg(feature = "AppKit_NSView")]
        #[method_id(@__retain_semantics Other view)]
        pub unsafe fn view(&self) -> Id<AppKit::NSView, Shared>;

        #[cfg(feature = "AppKit_NSSlider")]
        #[method_id(@__retain_semantics Other slider)]
        pub unsafe fn slider(&self) -> Id<AppKit::NSSlider, Shared>;

        #[cfg(feature = "AppKit_NSSlider")]
        #[method(setSlider:)]
        pub unsafe fn setSlider(&self, slider: &AppKit::NSSlider);

        #[method(doubleValue)]
        pub unsafe fn doubleValue(&self) -> c_double;

        #[method(setDoubleValue:)]
        pub unsafe fn setDoubleValue(&self, doubleValue: c_double);

        #[method(minimumSliderWidth)]
        pub unsafe fn minimumSliderWidth(&self) -> Foundation::CGFloat;

        #[method(setMinimumSliderWidth:)]
        pub unsafe fn setMinimumSliderWidth(&self, minimumSliderWidth: Foundation::CGFloat);

        #[method(maximumSliderWidth)]
        pub unsafe fn maximumSliderWidth(&self) -> Foundation::CGFloat;

        #[method(setMaximumSliderWidth:)]
        pub unsafe fn setMaximumSliderWidth(&self, maximumSliderWidth: Foundation::CGFloat);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: Option<&Foundation::NSString>);

        #[cfg(feature = "AppKit_NSSliderAccessory")]
        #[method_id(@__retain_semantics Other minimumValueAccessory)]
        pub unsafe fn minimumValueAccessory(&self)
            -> Option<Id<AppKit::NSSliderAccessory, Shared>>;

        #[cfg(feature = "AppKit_NSSliderAccessory")]
        #[method(setMinimumValueAccessory:)]
        pub unsafe fn setMinimumValueAccessory(
            &self,
            minimumValueAccessory: Option<&AppKit::NSSliderAccessory>,
        );

        #[cfg(feature = "AppKit_NSSliderAccessory")]
        #[method_id(@__retain_semantics Other maximumValueAccessory)]
        pub unsafe fn maximumValueAccessory(&self)
            -> Option<Id<AppKit::NSSliderAccessory, Shared>>;

        #[cfg(feature = "AppKit_NSSliderAccessory")]
        #[method(setMaximumValueAccessory:)]
        pub unsafe fn setMaximumValueAccessory(
            &self,
            maximumValueAccessory: Option<&AppKit::NSSliderAccessory>,
        );

        #[method(valueAccessoryWidth)]
        pub unsafe fn valueAccessoryWidth(&self) -> AppKit::NSSliderAccessoryWidth;

        #[method(setValueAccessoryWidth:)]
        pub unsafe fn setValueAccessoryWidth(
            &self,
            valueAccessoryWidth: AppKit::NSSliderAccessoryWidth,
        );

        #[method_id(@__retain_semantics Other target)]
        pub unsafe fn target(&self) -> Option<Id<Object, Shared>>;

        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&Object>);

        #[method(action)]
        pub unsafe fn action(&self) -> Option<Sel>;

        #[method(setAction:)]
        pub unsafe fn setAction(&self, action: Option<Sel>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other customizationLabel)]
        pub unsafe fn customizationLabel(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setCustomizationLabel:)]
        pub unsafe fn setCustomizationLabel(
            &self,
            customizationLabel: Option<&Foundation::NSString>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSSliderTouchBarItem")]
    unsafe impl AppKit::NSSliderTouchBarItem {
        #[method_id(@__retain_semantics Init initWithIdentifier:)]
        pub unsafe fn initWithIdentifier(
            this: Option<Allocated<Self>>,
            identifier: &AppKit::NSTouchBarItemIdentifier,
        ) -> Id<Self, Shared>;
    }
);
