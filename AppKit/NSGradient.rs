//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

ns_options!(
    #[underlying(NSUInteger)]
    pub enum NSGradientDrawingOptions {
        NSGradientDrawsBeforeStartingLocation = 1 << 0,
        NSGradientDrawsAfterEndingLocation = 1 << 1,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSGradient;

    unsafe impl ClassType for NSGradient {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSGradient")]
    unsafe impl NSGradient {
        #[cfg(feature = "AppKit_NSColor")]
        #[method_id(@__retain_semantics Init initWithStartingColor:endingColor:)]
        pub unsafe fn initWithStartingColor_endingColor(
            this: Option<Allocated<Self>>,
            startingColor: &AppKit::NSColor,
            endingColor: &AppKit::NSColor,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(all(feature = "AppKit_NSColor", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Init initWithColors:)]
        pub unsafe fn initWithColors(
            this: Option<Allocated<Self>>,
            colorArray: &Foundation::NSArray<AppKit::NSColor>,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(all(
            feature = "AppKit_NSColor",
            feature = "AppKit_NSColorSpace",
            feature = "Foundation_NSArray"
        ))]
        #[method_id(@__retain_semantics Init initWithColors:atLocations:colorSpace:)]
        pub unsafe fn initWithColors_atLocations_colorSpace(
            this: Option<Allocated<Self>>,
            colorArray: &Foundation::NSArray<AppKit::NSColor>,
            locations: *mut CoreGraphics::CGFloat,
            colorSpace: &AppKit::NSColorSpace,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &Foundation::NSCoder,
        ) -> Id<Self, Shared>;

        #[method(drawFromPoint:toPoint:options:)]
        pub unsafe fn drawFromPoint_toPoint_options(
            &self,
            startingPoint: Foundation::NSPoint,
            endingPoint: Foundation::NSPoint,
            options: AppKit::NSGradientDrawingOptions,
        );

        #[method(drawInRect:angle:)]
        pub unsafe fn drawInRect_angle(
            &self,
            rect: Foundation::NSRect,
            angle: CoreGraphics::CGFloat,
        );

        #[cfg(feature = "AppKit_NSBezierPath")]
        #[method(drawInBezierPath:angle:)]
        pub unsafe fn drawInBezierPath_angle(
            &self,
            path: &AppKit::NSBezierPath,
            angle: CoreGraphics::CGFloat,
        );

        #[method(drawFromCenter:radius:toCenter:radius:options:)]
        pub unsafe fn drawFromCenter_radius_toCenter_radius_options(
            &self,
            startCenter: Foundation::NSPoint,
            startRadius: CoreGraphics::CGFloat,
            endCenter: Foundation::NSPoint,
            endRadius: CoreGraphics::CGFloat,
            options: AppKit::NSGradientDrawingOptions,
        );

        #[method(drawInRect:relativeCenterPosition:)]
        pub unsafe fn drawInRect_relativeCenterPosition(
            &self,
            rect: Foundation::NSRect,
            relativeCenterPosition: Foundation::NSPoint,
        );

        #[cfg(feature = "AppKit_NSBezierPath")]
        #[method(drawInBezierPath:relativeCenterPosition:)]
        pub unsafe fn drawInBezierPath_relativeCenterPosition(
            &self,
            path: &AppKit::NSBezierPath,
            relativeCenterPosition: Foundation::NSPoint,
        );

        #[cfg(feature = "AppKit_NSColorSpace")]
        #[method_id(@__retain_semantics Other colorSpace)]
        pub unsafe fn colorSpace(&self) -> Id<AppKit::NSColorSpace, Shared>;

        #[method(numberOfColorStops)]
        pub unsafe fn numberOfColorStops(&self) -> NSInteger;

        #[cfg(feature = "AppKit_NSColor")]
        #[method(getColor:location:atIndex:)]
        pub unsafe fn getColor_location_atIndex(
            &self,
            color: *mut NonNull<AppKit::NSColor>,
            location: *mut CoreGraphics::CGFloat,
            index: NSInteger,
        );

        #[cfg(feature = "AppKit_NSColor")]
        #[method_id(@__retain_semantics Other interpolatedColorAtLocation:)]
        pub unsafe fn interpolatedColorAtLocation(
            &self,
            location: CoreGraphics::CGFloat,
        ) -> Id<AppKit::NSColor, Shared>;
    }
);
