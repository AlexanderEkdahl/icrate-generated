//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSTitlebarAccessoryViewController;

    unsafe impl ClassType for NSTitlebarAccessoryViewController {
        #[inherits(NSResponder, NSObject)]
        type Super = NSViewController;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSTitlebarAccessoryViewController")]
    unsafe impl NSTitlebarAccessoryViewController {
        #[method(layoutAttribute)]
        pub unsafe fn layoutAttribute(&self) -> NSLayoutAttribute;

        #[method(setLayoutAttribute:)]
        pub unsafe fn setLayoutAttribute(&self, layoutAttribute: NSLayoutAttribute);

        #[method(fullScreenMinHeight)]
        pub unsafe fn fullScreenMinHeight(&self) -> CGFloat;

        #[method(setFullScreenMinHeight:)]
        pub unsafe fn setFullScreenMinHeight(&self, fullScreenMinHeight: CGFloat);

        #[method(isHidden)]
        pub unsafe fn isHidden(&self) -> bool;

        #[method(setHidden:)]
        pub unsafe fn setHidden(&self, hidden: bool);

        #[method(automaticallyAdjustsSize)]
        pub unsafe fn automaticallyAdjustsSize(&self) -> bool;

        #[method(setAutomaticallyAdjustsSize:)]
        pub unsafe fn setAutomaticallyAdjustsSize(&self, automaticallyAdjustsSize: bool);

        #[method(viewWillAppear)]
        pub unsafe fn viewWillAppear(&self);

        #[method(viewDidAppear)]
        pub unsafe fn viewDidAppear(&self);

        #[method(viewDidDisappear)]
        pub unsafe fn viewDidDisappear(&self);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSViewController`
    #[cfg(feature = "AppKit_NSTitlebarAccessoryViewController")]
    unsafe impl NSTitlebarAccessoryViewController {
        #[cfg(all(feature = "AppKit_NSNibName", feature = "Foundation_NSBundle"))]
        #[method_id(@__retain_semantics Init initWithNibName:bundle:)]
        pub unsafe fn initWithNibName_bundle(
            this: Option<Allocated<Self>>,
            nibNameOrNil: Option<&NSNibName>,
            nibBundleOrNil: Option<&NSBundle>,
        ) -> Id<Self, Shared>;
    }
);
