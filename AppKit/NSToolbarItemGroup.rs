//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSToolbarItemGroupSelectionMode {
        NSToolbarItemGroupSelectionModeSelectOne = 0,
        NSToolbarItemGroupSelectionModeSelectAny = 1,
        NSToolbarItemGroupSelectionModeMomentary = 2,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSToolbarItemGroupControlRepresentation {
        NSToolbarItemGroupControlRepresentationAutomatic = 0,
        NSToolbarItemGroupControlRepresentationExpanded = 1,
        NSToolbarItemGroupControlRepresentationCollapsed = 2,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSToolbarItemGroup;

    unsafe impl ClassType for NSToolbarItemGroup {
        #[inherits(NSObject)]
        type Super = AppKit::NSToolbarItem;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSToolbarItemGroup")]
    unsafe impl NSToolbarItemGroup {
        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other groupWithItemIdentifier:titles:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_titles_selectionMode_labels_target_action(
            itemIdentifier: &AppKit::NSToolbarItemIdentifier,
            titles: &Foundation::NSArray<Foundation::NSString>,
            selectionMode: AppKit::NSToolbarItemGroupSelectionMode,
            labels: Option<&Foundation::NSArray<Foundation::NSString>>,
            target: Option<&Object>,
            action: Option<Sel>,
        ) -> Id<Self, Shared>;

        #[cfg(all(
            feature = "AppKit_NSImage",
            feature = "Foundation_NSArray",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other groupWithItemIdentifier:images:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_images_selectionMode_labels_target_action(
            itemIdentifier: &AppKit::NSToolbarItemIdentifier,
            images: &Foundation::NSArray<AppKit::NSImage>,
            selectionMode: AppKit::NSToolbarItemGroupSelectionMode,
            labels: Option<&Foundation::NSArray<Foundation::NSString>>,
            target: Option<&Object>,
            action: Option<Sel>,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other subitems)]
        pub unsafe fn subitems(&self) -> Id<Foundation::NSArray<AppKit::NSToolbarItem>, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method(setSubitems:)]
        pub unsafe fn setSubitems(&self, subitems: &Foundation::NSArray<AppKit::NSToolbarItem>);

        #[method(controlRepresentation)]
        pub unsafe fn controlRepresentation(
            &self,
        ) -> AppKit::NSToolbarItemGroupControlRepresentation;

        #[method(setControlRepresentation:)]
        pub unsafe fn setControlRepresentation(
            &self,
            controlRepresentation: AppKit::NSToolbarItemGroupControlRepresentation,
        );

        #[method(selectionMode)]
        pub unsafe fn selectionMode(&self) -> AppKit::NSToolbarItemGroupSelectionMode;

        #[method(setSelectionMode:)]
        pub unsafe fn setSelectionMode(
            &self,
            selectionMode: AppKit::NSToolbarItemGroupSelectionMode,
        );

        #[method(selectedIndex)]
        pub unsafe fn selectedIndex(&self) -> NSInteger;

        #[method(setSelectedIndex:)]
        pub unsafe fn setSelectedIndex(&self, selectedIndex: NSInteger);

        #[method(setSelected:atIndex:)]
        pub unsafe fn setSelected_atIndex(&self, selected: bool, index: NSInteger);

        #[method(isSelectedAtIndex:)]
        pub unsafe fn isSelectedAtIndex(&self, index: NSInteger) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSToolbarItem`
    #[cfg(feature = "AppKit_NSToolbarItemGroup")]
    unsafe impl AppKit::NSToolbarItemGroup {
        #[method_id(@__retain_semantics Init initWithItemIdentifier:)]
        pub unsafe fn initWithItemIdentifier(
            this: Option<Allocated<Self>>,
            itemIdentifier: &AppKit::NSToolbarItemIdentifier,
        ) -> Id<Self, Shared>;
    }
);
