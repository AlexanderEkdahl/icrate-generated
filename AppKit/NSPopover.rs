//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSPopoverAppearance {
        NSPopoverAppearanceMinimal = 0,
        NSPopoverAppearanceHUD = 1,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSPopoverBehavior {
        NSPopoverBehaviorApplicationDefined = 0,
        NSPopoverBehaviorTransient = 1,
        NSPopoverBehaviorSemitransient = 2,
    }
);

extern_static!(NSPopoverCloseReasonKey: &'static NSString);

pub type NSPopoverCloseReasonValue = NSString;

extern_static!(NSPopoverCloseReasonStandard: &'static NSPopoverCloseReasonValue);

extern_static!(NSPopoverCloseReasonDetachToWindow: &'static NSPopoverCloseReasonValue);

extern_static!(NSPopoverWillShowNotification: &'static NSNotificationName);

extern_static!(NSPopoverDidShowNotification: &'static NSNotificationName);

extern_static!(NSPopoverWillCloseNotification: &'static NSNotificationName);

extern_static!(NSPopoverDidCloseNotification: &'static NSNotificationName);

extern_protocol!(
    pub struct NSPopoverDelegate;

    unsafe impl NSPopoverDelegate {
        #[optional]
        #[method(popoverShouldClose:)]
        pub unsafe fn popoverShouldClose(&self, popover: &NSPopover) -> bool;

        #[optional]
        #[method(popoverShouldDetach:)]
        pub unsafe fn popoverShouldDetach(&self, popover: &NSPopover) -> bool;

        #[optional]
        #[method(popoverDidDetach:)]
        pub unsafe fn popoverDidDetach(&self, popover: &NSPopover);

        #[optional]
        #[method_id(@__retain_semantics Other detachableWindowForPopover:)]
        pub unsafe fn detachableWindowForPopover(
            &self,
            popover: &NSPopover,
        ) -> Option<Id<NSWindow, Shared>>;

        #[optional]
        #[method(popoverWillShow:)]
        pub unsafe fn popoverWillShow(&self, notification: &NSNotification);

        #[optional]
        #[method(popoverDidShow:)]
        pub unsafe fn popoverDidShow(&self, notification: &NSNotification);

        #[optional]
        #[method(popoverWillClose:)]
        pub unsafe fn popoverWillClose(&self, notification: &NSNotification);

        #[optional]
        #[method(popoverDidClose:)]
        pub unsafe fn popoverDidClose(&self, notification: &NSNotification);
    }
);
