//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSCompositingOperation {
        NSCompositingOperationClear = 0,
        NSCompositingOperationCopy = 1,
        NSCompositingOperationSourceOver = 2,
        NSCompositingOperationSourceIn = 3,
        NSCompositingOperationSourceOut = 4,
        NSCompositingOperationSourceAtop = 5,
        NSCompositingOperationDestinationOver = 6,
        NSCompositingOperationDestinationIn = 7,
        NSCompositingOperationDestinationOut = 8,
        NSCompositingOperationDestinationAtop = 9,
        NSCompositingOperationXOR = 10,
        NSCompositingOperationPlusDarker = 11,
        NSCompositingOperationHighlight = 12,
        NSCompositingOperationPlusLighter = 13,
        NSCompositingOperationMultiply = 14,
        NSCompositingOperationScreen = 15,
        NSCompositingOperationOverlay = 16,
        NSCompositingOperationDarken = 17,
        NSCompositingOperationLighten = 18,
        NSCompositingOperationColorDodge = 19,
        NSCompositingOperationColorBurn = 20,
        NSCompositingOperationSoftLight = 21,
        NSCompositingOperationHardLight = 22,
        NSCompositingOperationDifference = 23,
        NSCompositingOperationExclusion = 24,
        NSCompositingOperationHue = 25,
        NSCompositingOperationSaturation = 26,
        NSCompositingOperationColor = 27,
        NSCompositingOperationLuminosity = 28,
    }
);

extern_static!(NSCompositeClear: AppKit::NSCompositingOperation = NSCompositingOperationClear);

extern_static!(NSCompositeCopy: AppKit::NSCompositingOperation = NSCompositingOperationCopy);

extern_static!(
    NSCompositeSourceOver: AppKit::NSCompositingOperation = NSCompositingOperationSourceOver
);

extern_static!(
    NSCompositeSourceIn: AppKit::NSCompositingOperation = NSCompositingOperationSourceIn
);

extern_static!(
    NSCompositeSourceOut: AppKit::NSCompositingOperation = NSCompositingOperationSourceOut
);

extern_static!(
    NSCompositeSourceAtop: AppKit::NSCompositingOperation = NSCompositingOperationSourceAtop
);

extern_static!(
    NSCompositeDestinationOver: AppKit::NSCompositingOperation =
        NSCompositingOperationDestinationOver
);

extern_static!(
    NSCompositeDestinationIn: AppKit::NSCompositingOperation = NSCompositingOperationDestinationIn
);

extern_static!(
    NSCompositeDestinationOut: AppKit::NSCompositingOperation =
        NSCompositingOperationDestinationOut
);

extern_static!(
    NSCompositeDestinationAtop: AppKit::NSCompositingOperation =
        NSCompositingOperationDestinationAtop
);

extern_static!(NSCompositeXOR: AppKit::NSCompositingOperation = NSCompositingOperationXOR);

extern_static!(
    NSCompositePlusDarker: AppKit::NSCompositingOperation = NSCompositingOperationPlusDarker
);

extern_static!(
    NSCompositeHighlight: AppKit::NSCompositingOperation = NSCompositingOperationHighlight
);

extern_static!(
    NSCompositePlusLighter: AppKit::NSCompositingOperation = NSCompositingOperationPlusLighter
);

extern_static!(
    NSCompositeMultiply: AppKit::NSCompositingOperation = NSCompositingOperationMultiply
);

extern_static!(NSCompositeScreen: AppKit::NSCompositingOperation = NSCompositingOperationScreen);

extern_static!(NSCompositeOverlay: AppKit::NSCompositingOperation = NSCompositingOperationOverlay);

extern_static!(NSCompositeDarken: AppKit::NSCompositingOperation = NSCompositingOperationDarken);

extern_static!(NSCompositeLighten: AppKit::NSCompositingOperation = NSCompositingOperationLighten);

extern_static!(
    NSCompositeColorDodge: AppKit::NSCompositingOperation = NSCompositingOperationColorDodge
);

extern_static!(
    NSCompositeColorBurn: AppKit::NSCompositingOperation = NSCompositingOperationColorBurn
);

extern_static!(
    NSCompositeSoftLight: AppKit::NSCompositingOperation = NSCompositingOperationSoftLight
);

extern_static!(
    NSCompositeHardLight: AppKit::NSCompositingOperation = NSCompositingOperationHardLight
);

extern_static!(
    NSCompositeDifference: AppKit::NSCompositingOperation = NSCompositingOperationDifference
);

extern_static!(
    NSCompositeExclusion: AppKit::NSCompositingOperation = NSCompositingOperationExclusion
);

extern_static!(NSCompositeHue: AppKit::NSCompositingOperation = NSCompositingOperationHue);

extern_static!(
    NSCompositeSaturation: AppKit::NSCompositingOperation = NSCompositingOperationSaturation
);

extern_static!(NSCompositeColor: AppKit::NSCompositingOperation = NSCompositingOperationColor);

extern_static!(
    NSCompositeLuminosity: AppKit::NSCompositingOperation = NSCompositingOperationLuminosity
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSBackingStoreType {
        NSBackingStoreRetained = 0,
        NSBackingStoreNonretained = 1,
        NSBackingStoreBuffered = 2,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSWindowOrderingMode {
        NSWindowAbove = 1,
        NSWindowBelow = -1,
        NSWindowOut = 0,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSFocusRingPlacement {
        NSFocusRingOnly = 0,
        NSFocusRingBelow = 1,
        NSFocusRingAbove = 2,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSFocusRingType {
        NSFocusRingTypeDefault = 0,
        NSFocusRingTypeNone = 1,
        NSFocusRingTypeExterior = 2,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSColorRenderingIntent {
        NSColorRenderingIntentDefault = 0,
        NSColorRenderingIntentAbsoluteColorimetric = 1,
        NSColorRenderingIntentRelativeColorimetric = 2,
        NSColorRenderingIntentPerceptual = 3,
        NSColorRenderingIntentSaturation = 4,
    }
);

typed_enum!(
    pub type NSColorSpaceName = Foundation::NSString;
);

extern_static!(NSCalibratedWhiteColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSCalibratedRGBColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSDeviceWhiteColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSDeviceRGBColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSDeviceCMYKColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSNamedColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSPatternColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSCustomColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSCalibratedBlackColorSpace: &'static AppKit::NSColorSpaceName);

extern_static!(NSDeviceBlackColorSpace: &'static AppKit::NSColorSpaceName);

ns_enum!(
    #[underlying(i32)]
    pub enum NSWindowDepth {
        NSWindowDepthTwentyfourBitRGB = 0x208,
        NSWindowDepthSixtyfourBitRGB = 0x210,
        NSWindowDepthOnehundredtwentyeightBitRGB = 0x220,
    }
);

extern_fn!(
    pub unsafe fn NSBestDepth(
        colorSpace: &AppKit::NSColorSpaceName,
        bps: NSInteger,
        bpp: NSInteger,
        planar: Bool,
        exactMatch: *mut Bool,
    ) -> AppKit::NSWindowDepth;
);

extern_fn!(
    pub unsafe fn NSPlanarFromDepth(depth: AppKit::NSWindowDepth) -> Bool;
);

extern_fn!(
    pub unsafe fn NSColorSpaceFromDepth(
        depth: AppKit::NSWindowDepth,
    ) -> *mut AppKit::NSColorSpaceName;
);

extern_fn!(
    pub unsafe fn NSBitsPerSampleFromDepth(depth: AppKit::NSWindowDepth) -> NSInteger;
);

extern_fn!(
    pub unsafe fn NSBitsPerPixelFromDepth(depth: AppKit::NSWindowDepth) -> NSInteger;
);

extern_fn!(
    pub unsafe fn NSNumberOfColorComponents(colorSpaceName: &AppKit::NSColorSpaceName)
        -> NSInteger;
);

extern_fn!(
    pub unsafe fn NSAvailableWindowDepths() -> NonNull<AppKit::NSWindowDepth>;
);

extern_static!(NSWhite: CoreGraphics::CGFloat);

extern_static!(NSLightGray: CoreGraphics::CGFloat);

extern_static!(NSDarkGray: CoreGraphics::CGFloat);

extern_static!(NSBlack: CoreGraphics::CGFloat);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSDisplayGamut {
        NSDisplayGamutSRGB = 1,
        NSDisplayGamutP3 = 2,
    }
);

typed_extensible_enum!(
    pub type NSDeviceDescriptionKey = Foundation::NSString;
);

extern_static!(NSDeviceResolution: &'static AppKit::NSDeviceDescriptionKey);

extern_static!(NSDeviceColorSpaceName: &'static AppKit::NSDeviceDescriptionKey);

extern_static!(NSDeviceBitsPerSample: &'static AppKit::NSDeviceDescriptionKey);

extern_static!(NSDeviceIsScreen: &'static AppKit::NSDeviceDescriptionKey);

extern_static!(NSDeviceIsPrinter: &'static AppKit::NSDeviceDescriptionKey);

extern_static!(NSDeviceSize: &'static AppKit::NSDeviceDescriptionKey);

extern_fn!(
    pub unsafe fn NSRectFill(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSRectFillList(rects: NonNull<Foundation::NSRect>, count: NSInteger);
);

extern_fn!(
    pub unsafe fn NSRectFillListWithGrays(
        rects: NonNull<Foundation::NSRect>,
        grays: NonNull<CoreGraphics::CGFloat>,
        num: NSInteger,
    );
);

extern_fn!(
    pub unsafe fn NSRectFillListWithColors(
        rects: NonNull<Foundation::NSRect>,
        colors: NonNull<NonNull<AppKit::NSColor>>,
        num: NSInteger,
    );
);

extern_fn!(
    pub unsafe fn NSRectFillUsingOperation(
        rect: Foundation::NSRect,
        op: AppKit::NSCompositingOperation,
    );
);

extern_fn!(
    pub unsafe fn NSRectFillListUsingOperation(
        rects: NonNull<Foundation::NSRect>,
        count: NSInteger,
        op: AppKit::NSCompositingOperation,
    );
);

extern_fn!(
    pub unsafe fn NSRectFillListWithColorsUsingOperation(
        rects: NonNull<Foundation::NSRect>,
        colors: NonNull<NonNull<AppKit::NSColor>>,
        num: NSInteger,
        op: AppKit::NSCompositingOperation,
    );
);

extern_fn!(
    pub unsafe fn NSFrameRect(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSFrameRectWithWidth(rect: Foundation::NSRect, frameWidth: CoreGraphics::CGFloat);
);

extern_fn!(
    pub unsafe fn NSFrameRectWithWidthUsingOperation(
        rect: Foundation::NSRect,
        frameWidth: CoreGraphics::CGFloat,
        op: AppKit::NSCompositingOperation,
    );
);

extern_fn!(
    pub unsafe fn NSRectClip(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSRectClipList(rects: NonNull<Foundation::NSRect>, count: NSInteger);
);

extern_fn!(
    pub unsafe fn NSDrawTiledRects(
        boundsRect: Foundation::NSRect,
        clipRect: Foundation::NSRect,
        sides: NonNull<Foundation::NSRectEdge>,
        grays: NonNull<CoreGraphics::CGFloat>,
        count: NSInteger,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSDrawGrayBezel(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDrawGroove(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDrawWhiteBezel(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDrawButton(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSEraseRect(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSReadPixel(passedPoint: Foundation::NSPoint) -> *mut AppKit::NSColor;
);

extern_fn!(
    pub unsafe fn NSHighlightRect(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSBeep();
);

extern_fn!(
    pub unsafe fn NSGetWindowServerMemory(
        context: NSInteger,
        virtualMemory: NonNull<NSInteger>,
        windowBackingMemory: NonNull<NSInteger>,
        windowDumpString: NonNull<NonNull<Foundation::NSString>>,
    ) -> NSInteger;
);

extern_fn!(
    pub unsafe fn NSDrawColorTiledRects(
        boundsRect: Foundation::NSRect,
        clipRect: Foundation::NSRect,
        sides: NonNull<Foundation::NSRectEdge>,
        colors: NonNull<NonNull<AppKit::NSColor>>,
        count: NSInteger,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSDrawDarkBezel(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDrawLightBezel(rect: Foundation::NSRect, clipRect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDottedFrameRect(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSDrawWindowBackground(rect: Foundation::NSRect);
);

extern_fn!(
    pub unsafe fn NSSetFocusRingStyle(placement: AppKit::NSFocusRingPlacement);
);

extern_fn!(
    pub unsafe fn NSDisableScreenUpdates();
);

extern_fn!(
    pub unsafe fn NSEnableScreenUpdates();
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSAnimationEffect {
        NSAnimationEffectDisappearingItemDefault = 0,
        NSAnimationEffectPoof = 10,
    }
);

extern_fn!(
    pub unsafe fn NSShowAnimationEffect(
        animationEffect: AppKit::NSAnimationEffect,
        centerLocation: Foundation::NSPoint,
        size: Foundation::NSSize,
        animationDelegate: Option<&Object>,
        didEndSelector: Option<Sel>,
        contextInfo: *mut c_void,
    );
);

extern_fn!(
    pub unsafe fn NSCountWindows(count: NonNull<NSInteger>);
);

extern_fn!(
    pub unsafe fn NSWindowList(size: NSInteger, list: NonNull<NSInteger>);
);

extern_fn!(
    pub unsafe fn NSCountWindowsForContext(context: NSInteger, count: NonNull<NSInteger>);
);

extern_fn!(
    pub unsafe fn NSWindowListForContext(
        context: NSInteger,
        size: NSInteger,
        list: NonNull<NSInteger>,
    );
);

extern_fn!(
    pub unsafe fn NSCopyBits(
        srcGState: NSInteger,
        srcRect: Foundation::NSRect,
        destPoint: Foundation::NSPoint,
    );
);
