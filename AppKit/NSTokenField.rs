//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_protocol!(
    pub struct NSTokenFieldDelegate;

    unsafe impl ProtocolType for NSTokenFieldDelegate {
        #[optional]
        #[method_id(@__retain_semantics Other tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:)]
        pub unsafe fn tokenField_completionsForSubstring_indexOfToken_indexOfSelectedItem(
            &self,
            tokenField: &AppKit::NSTokenField,
            substring: &Foundation::NSString,
            tokenIndex: NSInteger,
            selectedIndex: *mut NSInteger,
        ) -> Option<Id<Foundation::NSArray, Shared>>;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:shouldAddObjects:atIndex:)]
        pub unsafe fn tokenField_shouldAddObjects_atIndex(
            &self,
            tokenField: &AppKit::NSTokenField,
            tokens: &Foundation::NSArray,
            index: NSUInteger,
        ) -> Id<Foundation::NSArray, Shared>;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:displayStringForRepresentedObject:)]
        pub unsafe fn tokenField_displayStringForRepresentedObject(
            &self,
            tokenField: &AppKit::NSTokenField,
            representedObject: &Object,
        ) -> Option<Id<Foundation::NSString, Shared>>;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:editingStringForRepresentedObject:)]
        pub unsafe fn tokenField_editingStringForRepresentedObject(
            &self,
            tokenField: &AppKit::NSTokenField,
            representedObject: &Object,
        ) -> Option<Id<Foundation::NSString, Shared>>;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:representedObjectForEditingString:)]
        pub unsafe fn tokenField_representedObjectForEditingString(
            &self,
            tokenField: &AppKit::NSTokenField,
            editingString: &Foundation::NSString,
        ) -> Option<Id<Object, Shared>>;

        #[optional]
        #[method(tokenField:writeRepresentedObjects:toPasteboard:)]
        pub unsafe fn tokenField_writeRepresentedObjects_toPasteboard(
            &self,
            tokenField: &AppKit::NSTokenField,
            objects: &Foundation::NSArray,
            pboard: &AppKit::NSPasteboard,
        ) -> bool;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:readFromPasteboard:)]
        pub unsafe fn tokenField_readFromPasteboard(
            &self,
            tokenField: &AppKit::NSTokenField,
            pboard: &AppKit::NSPasteboard,
        ) -> Option<Id<Foundation::NSArray, Shared>>;

        #[optional]
        #[method_id(@__retain_semantics Other tokenField:menuForRepresentedObject:)]
        pub unsafe fn tokenField_menuForRepresentedObject(
            &self,
            tokenField: &AppKit::NSTokenField,
            representedObject: &Object,
        ) -> Option<Id<AppKit::NSMenu, Shared>>;

        #[optional]
        #[method(tokenField:hasMenuForRepresentedObject:)]
        pub unsafe fn tokenField_hasMenuForRepresentedObject(
            &self,
            tokenField: &AppKit::NSTokenField,
            representedObject: &Object,
        ) -> bool;

        #[optional]
        #[method(tokenField:styleForRepresentedObject:)]
        pub unsafe fn tokenField_styleForRepresentedObject(
            &self,
            tokenField: &AppKit::NSTokenField,
            representedObject: &Object,
        ) -> NSTokenStyle;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSTokenField;

    unsafe impl ClassType for NSTokenField {
        #[inherits(AppKit::NSControl, AppKit::NSView, AppKit::NSResponder, NSObject)]
        type Super = AppKit::NSTextField;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSTokenField")]
    unsafe impl NSTokenField {
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Id<AppKit::NSTokenFieldDelegate, Shared>>;

        #[method(setDelegate:)]
        pub unsafe fn setDelegate(&self, delegate: Option<&AppKit::NSTokenFieldDelegate>);

        #[method(tokenStyle)]
        pub unsafe fn tokenStyle(&self) -> NSTokenStyle;

        #[method(setTokenStyle:)]
        pub unsafe fn setTokenStyle(&self, tokenStyle: NSTokenStyle);

        #[method(completionDelay)]
        pub unsafe fn completionDelay(&self) -> NSTimeInterval;

        #[method(setCompletionDelay:)]
        pub unsafe fn setCompletionDelay(&self, completionDelay: NSTimeInterval);

        #[method(defaultCompletionDelay)]
        pub unsafe fn defaultCompletionDelay() -> NSTimeInterval;

        #[cfg(feature = "Foundation_NSCharacterSet")]
        #[method_id(@__retain_semantics Other tokenizingCharacterSet)]
        pub unsafe fn tokenizingCharacterSet(&self) -> Id<Foundation::NSCharacterSet, Shared>;

        #[cfg(feature = "Foundation_NSCharacterSet")]
        #[method(setTokenizingCharacterSet:)]
        pub unsafe fn setTokenizingCharacterSet(
            &self,
            tokenizingCharacterSet: Option<&Foundation::NSCharacterSet>,
        );

        #[cfg(feature = "Foundation_NSCharacterSet")]
        #[method_id(@__retain_semantics Other defaultTokenizingCharacterSet)]
        pub unsafe fn defaultTokenizingCharacterSet() -> Id<Foundation::NSCharacterSet, Shared>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSTextField`
    ///
    /// NSTextFieldConvenience
    #[cfg(feature = "AppKit_NSTokenField")]
    unsafe impl AppKit::NSTokenField {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other labelWithString:)]
        pub unsafe fn labelWithString(stringValue: &Foundation::NSString) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other wrappingLabelWithString:)]
        pub unsafe fn wrappingLabelWithString(
            stringValue: &Foundation::NSString,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSAttributedString")]
        #[method_id(@__retain_semantics Other labelWithAttributedString:)]
        pub unsafe fn labelWithAttributedString(
            attributedStringValue: &Foundation::NSAttributedString,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other textFieldWithString:)]
        pub unsafe fn textFieldWithString(stringValue: &Foundation::NSString) -> Id<Self, Shared>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSControl`
    #[cfg(feature = "AppKit_NSTokenField")]
    unsafe impl AppKit::NSTokenField {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(
            this: Option<Allocated<Self>>,
            frameRect: NSRect,
        ) -> Id<Self, Shared>;
    }
);
