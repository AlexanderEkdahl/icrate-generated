//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPopoverTouchBarItem;

    unsafe impl ClassType for NSPopoverTouchBarItem {
        #[inherits(NSObject)]
        type Super = AppKit::NSTouchBarItem;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSPopoverTouchBarItem")]
    unsafe impl NSPopoverTouchBarItem {
        #[cfg(feature = "AppKit_NSTouchBar")]
        #[method_id(@__retain_semantics Other popoverTouchBar)]
        pub unsafe fn popoverTouchBar(&self) -> Id<AppKit::NSTouchBar, Shared>;

        #[cfg(feature = "AppKit_NSTouchBar")]
        #[method(setPopoverTouchBar:)]
        pub unsafe fn setPopoverTouchBar(&self, popoverTouchBar: &AppKit::NSTouchBar);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other customizationLabel)]
        pub unsafe fn customizationLabel(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setCustomizationLabel:)]
        pub unsafe fn setCustomizationLabel(
            &self,
            customizationLabel: Option<&Foundation::NSString>,
        );

        #[cfg(feature = "AppKit_NSView")]
        #[method_id(@__retain_semantics Other collapsedRepresentation)]
        pub unsafe fn collapsedRepresentation(&self) -> Id<AppKit::NSView, Shared>;

        #[cfg(feature = "AppKit_NSView")]
        #[method(setCollapsedRepresentation:)]
        pub unsafe fn setCollapsedRepresentation(&self, collapsedRepresentation: &AppKit::NSView);

        #[cfg(feature = "AppKit_NSImage")]
        #[method_id(@__retain_semantics Other collapsedRepresentationImage)]
        pub unsafe fn collapsedRepresentationImage(&self) -> Option<Id<AppKit::NSImage, Shared>>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method(setCollapsedRepresentationImage:)]
        pub unsafe fn setCollapsedRepresentationImage(
            &self,
            collapsedRepresentationImage: Option<&AppKit::NSImage>,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other collapsedRepresentationLabel)]
        pub unsafe fn collapsedRepresentationLabel(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setCollapsedRepresentationLabel:)]
        pub unsafe fn setCollapsedRepresentationLabel(
            &self,
            collapsedRepresentationLabel: &Foundation::NSString,
        );

        #[cfg(feature = "AppKit_NSTouchBar")]
        #[method_id(@__retain_semantics Other pressAndHoldTouchBar)]
        pub unsafe fn pressAndHoldTouchBar(&self) -> Option<Id<AppKit::NSTouchBar, Shared>>;

        #[cfg(feature = "AppKit_NSTouchBar")]
        #[method(setPressAndHoldTouchBar:)]
        pub unsafe fn setPressAndHoldTouchBar(
            &self,
            pressAndHoldTouchBar: Option<&AppKit::NSTouchBar>,
        );

        #[method(showsCloseButton)]
        pub unsafe fn showsCloseButton(&self) -> bool;

        #[method(setShowsCloseButton:)]
        pub unsafe fn setShowsCloseButton(&self, showsCloseButton: bool);

        #[method(showPopover:)]
        pub unsafe fn showPopover(&self, sender: Option<&Object>);

        #[method(dismissPopover:)]
        pub unsafe fn dismissPopover(&self, sender: Option<&Object>);

        #[cfg(feature = "AppKit_NSGestureRecognizer")]
        #[method_id(@__retain_semantics Other makeStandardActivatePopoverGestureRecognizer)]
        pub unsafe fn makeStandardActivatePopoverGestureRecognizer(
            &self,
        ) -> Id<AppKit::NSGestureRecognizer, Shared>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSTouchBarItem`
    #[cfg(feature = "AppKit_NSPopoverTouchBarItem")]
    unsafe impl AppKit::NSPopoverTouchBarItem {
        #[method_id(@__retain_semantics Init initWithIdentifier:)]
        pub unsafe fn initWithIdentifier(
            this: Option<Allocated<Self>>,
            identifier: &AppKit::NSTouchBarItemIdentifier,
        ) -> Id<Self, Shared>;
    }
);
