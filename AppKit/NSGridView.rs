//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSGridCellPlacement {
        NSGridCellPlacementInherited = 0,
        NSGridCellPlacementNone = 1,
        NSGridCellPlacementLeading = 2,
        NSGridCellPlacementTop = NSGridCellPlacementLeading,
        NSGridCellPlacementTrailing = 3,
        NSGridCellPlacementBottom = NSGridCellPlacementTrailing,
        NSGridCellPlacementCenter = 4,
        NSGridCellPlacementFill = 5,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSGridRowAlignment {
        NSGridRowAlignmentInherited = 0,
        NSGridRowAlignmentNone = 1,
        NSGridRowAlignmentFirstBaseline = 2,
        NSGridRowAlignmentLastBaseline = 3,
    }
);

extern_static!(NSGridViewSizeForContent: Foundation::CGFloat);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSGridView;

    unsafe impl ClassType for NSGridView {
        #[inherits(AppKit::NSResponder, NSObject)]
        type Super = AppKit::NSView;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSGridView")]
    unsafe impl NSGridView {
        #[method_id(@__retain_semantics Init initWithFrame:)]
        pub unsafe fn initWithFrame(
            this: Option<Allocated<Self>>,
            frameRect: Foundation::NSRect,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &Foundation::NSCoder,
        ) -> Option<Id<Self, Shared>>;

        #[method_id(@__retain_semantics Other gridViewWithNumberOfColumns:rows:)]
        pub unsafe fn gridViewWithNumberOfColumns_rows(
            columnCount: NSInteger,
            rowCount: NSInteger,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other gridViewWithViews:)]
        pub unsafe fn gridViewWithViews(
            rows: &Foundation::NSArray<Foundation::NSArray<AppKit::NSView>>,
        ) -> Id<Self, Shared>;

        #[method(numberOfRows)]
        pub unsafe fn numberOfRows(&self) -> NSInteger;

        #[method(numberOfColumns)]
        pub unsafe fn numberOfColumns(&self) -> NSInteger;

        #[cfg(feature = "AppKit_NSGridRow")]
        #[method_id(@__retain_semantics Other rowAtIndex:)]
        pub unsafe fn rowAtIndex(&self, index: NSInteger) -> Id<AppKit::NSGridRow, Shared>;

        #[cfg(feature = "AppKit_NSGridRow")]
        #[method(indexOfRow:)]
        pub unsafe fn indexOfRow(&self, row: &AppKit::NSGridRow) -> NSInteger;

        #[cfg(feature = "AppKit_NSGridColumn")]
        #[method_id(@__retain_semantics Other columnAtIndex:)]
        pub unsafe fn columnAtIndex(&self, index: NSInteger) -> Id<AppKit::NSGridColumn, Shared>;

        #[cfg(feature = "AppKit_NSGridColumn")]
        #[method(indexOfColumn:)]
        pub unsafe fn indexOfColumn(&self, column: &AppKit::NSGridColumn) -> NSInteger;

        #[cfg(feature = "AppKit_NSGridCell")]
        #[method_id(@__retain_semantics Other cellAtColumnIndex:rowIndex:)]
        pub unsafe fn cellAtColumnIndex_rowIndex(
            &self,
            columnIndex: NSInteger,
            rowIndex: NSInteger,
        ) -> Id<AppKit::NSGridCell, Shared>;

        #[cfg(feature = "AppKit_NSGridCell")]
        #[method_id(@__retain_semantics Other cellForView:)]
        pub unsafe fn cellForView(
            &self,
            view: &AppKit::NSView,
        ) -> Option<Id<AppKit::NSGridCell, Shared>>;

        #[cfg(all(feature = "AppKit_NSGridRow", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other addRowWithViews:)]
        pub unsafe fn addRowWithViews(
            &self,
            views: &Foundation::NSArray<AppKit::NSView>,
        ) -> Id<AppKit::NSGridRow, Shared>;

        #[cfg(all(feature = "AppKit_NSGridRow", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other insertRowAtIndex:withViews:)]
        pub unsafe fn insertRowAtIndex_withViews(
            &self,
            index: NSInteger,
            views: &Foundation::NSArray<AppKit::NSView>,
        ) -> Id<AppKit::NSGridRow, Shared>;

        #[method(moveRowAtIndex:toIndex:)]
        pub unsafe fn moveRowAtIndex_toIndex(&self, fromIndex: NSInteger, toIndex: NSInteger);

        #[method(removeRowAtIndex:)]
        pub unsafe fn removeRowAtIndex(&self, index: NSInteger);

        #[cfg(all(feature = "AppKit_NSGridColumn", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other addColumnWithViews:)]
        pub unsafe fn addColumnWithViews(
            &self,
            views: &Foundation::NSArray<AppKit::NSView>,
        ) -> Id<AppKit::NSGridColumn, Shared>;

        #[cfg(all(feature = "AppKit_NSGridColumn", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other insertColumnAtIndex:withViews:)]
        pub unsafe fn insertColumnAtIndex_withViews(
            &self,
            index: NSInteger,
            views: &Foundation::NSArray<AppKit::NSView>,
        ) -> Id<AppKit::NSGridColumn, Shared>;

        #[method(moveColumnAtIndex:toIndex:)]
        pub unsafe fn moveColumnAtIndex_toIndex(&self, fromIndex: NSInteger, toIndex: NSInteger);

        #[method(removeColumnAtIndex:)]
        pub unsafe fn removeColumnAtIndex(&self, index: NSInteger);

        #[method(xPlacement)]
        pub unsafe fn xPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setXPlacement:)]
        pub unsafe fn setXPlacement(&self, xPlacement: AppKit::NSGridCellPlacement);

        #[method(yPlacement)]
        pub unsafe fn yPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setYPlacement:)]
        pub unsafe fn setYPlacement(&self, yPlacement: AppKit::NSGridCellPlacement);

        #[method(rowAlignment)]
        pub unsafe fn rowAlignment(&self) -> AppKit::NSGridRowAlignment;

        #[method(setRowAlignment:)]
        pub unsafe fn setRowAlignment(&self, rowAlignment: AppKit::NSGridRowAlignment);

        #[method(rowSpacing)]
        pub unsafe fn rowSpacing(&self) -> Foundation::CGFloat;

        #[method(setRowSpacing:)]
        pub unsafe fn setRowSpacing(&self, rowSpacing: Foundation::CGFloat);

        #[method(columnSpacing)]
        pub unsafe fn columnSpacing(&self) -> Foundation::CGFloat;

        #[method(setColumnSpacing:)]
        pub unsafe fn setColumnSpacing(&self, columnSpacing: Foundation::CGFloat);

        #[method(mergeCellsInHorizontalRange:verticalRange:)]
        pub unsafe fn mergeCellsInHorizontalRange_verticalRange(
            &self,
            hRange: Foundation::NSRange,
            vRange: Foundation::NSRange,
        );
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSGridRow;

    unsafe impl ClassType for NSGridRow {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSGridRow")]
    unsafe impl NSGridRow {
        #[cfg(feature = "AppKit_NSGridView")]
        #[method_id(@__retain_semantics Other gridView)]
        pub unsafe fn gridView(&self) -> Option<Id<AppKit::NSGridView, Shared>>;

        #[method(numberOfCells)]
        pub unsafe fn numberOfCells(&self) -> NSInteger;

        #[cfg(feature = "AppKit_NSGridCell")]
        #[method_id(@__retain_semantics Other cellAtIndex:)]
        pub unsafe fn cellAtIndex(&self, index: NSInteger) -> Id<AppKit::NSGridCell, Shared>;

        #[method(yPlacement)]
        pub unsafe fn yPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setYPlacement:)]
        pub unsafe fn setYPlacement(&self, yPlacement: AppKit::NSGridCellPlacement);

        #[method(rowAlignment)]
        pub unsafe fn rowAlignment(&self) -> AppKit::NSGridRowAlignment;

        #[method(setRowAlignment:)]
        pub unsafe fn setRowAlignment(&self, rowAlignment: AppKit::NSGridRowAlignment);

        #[method(height)]
        pub unsafe fn height(&self) -> Foundation::CGFloat;

        #[method(setHeight:)]
        pub unsafe fn setHeight(&self, height: Foundation::CGFloat);

        #[method(topPadding)]
        pub unsafe fn topPadding(&self) -> Foundation::CGFloat;

        #[method(setTopPadding:)]
        pub unsafe fn setTopPadding(&self, topPadding: Foundation::CGFloat);

        #[method(bottomPadding)]
        pub unsafe fn bottomPadding(&self) -> Foundation::CGFloat;

        #[method(setBottomPadding:)]
        pub unsafe fn setBottomPadding(&self, bottomPadding: Foundation::CGFloat);

        #[method(isHidden)]
        pub unsafe fn isHidden(&self) -> bool;

        #[method(setHidden:)]
        pub unsafe fn setHidden(&self, hidden: bool);

        #[method(mergeCellsInRange:)]
        pub unsafe fn mergeCellsInRange(&self, range: Foundation::NSRange);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSGridColumn;

    unsafe impl ClassType for NSGridColumn {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSGridColumn")]
    unsafe impl NSGridColumn {
        #[cfg(feature = "AppKit_NSGridView")]
        #[method_id(@__retain_semantics Other gridView)]
        pub unsafe fn gridView(&self) -> Option<Id<AppKit::NSGridView, Shared>>;

        #[method(numberOfCells)]
        pub unsafe fn numberOfCells(&self) -> NSInteger;

        #[cfg(feature = "AppKit_NSGridCell")]
        #[method_id(@__retain_semantics Other cellAtIndex:)]
        pub unsafe fn cellAtIndex(&self, index: NSInteger) -> Id<AppKit::NSGridCell, Shared>;

        #[method(xPlacement)]
        pub unsafe fn xPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setXPlacement:)]
        pub unsafe fn setXPlacement(&self, xPlacement: AppKit::NSGridCellPlacement);

        #[method(width)]
        pub unsafe fn width(&self) -> Foundation::CGFloat;

        #[method(setWidth:)]
        pub unsafe fn setWidth(&self, width: Foundation::CGFloat);

        #[method(leadingPadding)]
        pub unsafe fn leadingPadding(&self) -> Foundation::CGFloat;

        #[method(setLeadingPadding:)]
        pub unsafe fn setLeadingPadding(&self, leadingPadding: Foundation::CGFloat);

        #[method(trailingPadding)]
        pub unsafe fn trailingPadding(&self) -> Foundation::CGFloat;

        #[method(setTrailingPadding:)]
        pub unsafe fn setTrailingPadding(&self, trailingPadding: Foundation::CGFloat);

        #[method(isHidden)]
        pub unsafe fn isHidden(&self) -> bool;

        #[method(setHidden:)]
        pub unsafe fn setHidden(&self, hidden: bool);

        #[method(mergeCellsInRange:)]
        pub unsafe fn mergeCellsInRange(&self, range: Foundation::NSRange);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSGridCell;

    unsafe impl ClassType for NSGridCell {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSGridCell")]
    unsafe impl NSGridCell {
        #[cfg(feature = "AppKit_NSView")]
        #[method_id(@__retain_semantics Other contentView)]
        pub unsafe fn contentView(&self) -> Option<Id<AppKit::NSView, Shared>>;

        #[cfg(feature = "AppKit_NSView")]
        #[method(setContentView:)]
        pub unsafe fn setContentView(&self, contentView: Option<&AppKit::NSView>);

        #[cfg(feature = "AppKit_NSView")]
        #[method_id(@__retain_semantics Other emptyContentView)]
        pub unsafe fn emptyContentView() -> Id<AppKit::NSView, Shared>;

        #[cfg(feature = "AppKit_NSGridRow")]
        #[method_id(@__retain_semantics Other row)]
        pub unsafe fn row(&self) -> Option<Id<AppKit::NSGridRow, Shared>>;

        #[cfg(feature = "AppKit_NSGridColumn")]
        #[method_id(@__retain_semantics Other column)]
        pub unsafe fn column(&self) -> Option<Id<AppKit::NSGridColumn, Shared>>;

        #[method(xPlacement)]
        pub unsafe fn xPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setXPlacement:)]
        pub unsafe fn setXPlacement(&self, xPlacement: AppKit::NSGridCellPlacement);

        #[method(yPlacement)]
        pub unsafe fn yPlacement(&self) -> AppKit::NSGridCellPlacement;

        #[method(setYPlacement:)]
        pub unsafe fn setYPlacement(&self, yPlacement: AppKit::NSGridCellPlacement);

        #[method(rowAlignment)]
        pub unsafe fn rowAlignment(&self) -> AppKit::NSGridRowAlignment;

        #[method(setRowAlignment:)]
        pub unsafe fn setRowAlignment(&self, rowAlignment: AppKit::NSGridRowAlignment);

        #[cfg(all(feature = "AppKit_NSLayoutConstraint", feature = "Foundation_NSArray"))]
        #[method_id(@__retain_semantics Other customPlacementConstraints)]
        pub unsafe fn customPlacementConstraints(
            &self,
        ) -> Id<Foundation::NSArray<AppKit::NSLayoutConstraint>, Shared>;

        #[cfg(all(feature = "AppKit_NSLayoutConstraint", feature = "Foundation_NSArray"))]
        #[method(setCustomPlacementConstraints:)]
        pub unsafe fn setCustomPlacementConstraints(
            &self,
            customPlacementConstraints: &Foundation::NSArray<AppKit::NSLayoutConstraint>,
        );
    }
);
