//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit;
use crate::CoreData;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSColorPicker;

    unsafe impl ClassType for NSColorPicker {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AppKit_NSColorPicker")]
    unsafe impl NSColorPicker {
        #[cfg(feature = "AppKit_NSColorPanel")]
        #[method_id(@__retain_semantics Init initWithPickerMask:colorPanel:)]
        pub unsafe fn initWithPickerMask_colorPanel(
            this: Option<Allocated<Self>>,
            mask: NSUInteger,
            owningColorPanel: &AppKit::NSColorPanel,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(feature = "AppKit_NSColorPanel")]
        #[method_id(@__retain_semantics Other colorPanel)]
        pub unsafe fn colorPanel(&self) -> Id<AppKit::NSColorPanel, Shared>;

        #[cfg(feature = "AppKit_NSImage")]
        #[method_id(@__retain_semantics Other provideNewButtonImage)]
        pub unsafe fn provideNewButtonImage(&self) -> Id<AppKit::NSImage, Shared>;

        #[cfg(all(feature = "AppKit_NSButtonCell", feature = "AppKit_NSImage"))]
        #[method(insertNewButtonImage:in:)]
        pub unsafe fn insertNewButtonImage_in(
            &self,
            newButtonImage: &AppKit::NSImage,
            buttonCell: &AppKit::NSButtonCell,
        );

        #[method(viewSizeChanged:)]
        pub unsafe fn viewSizeChanged(&self, sender: Option<&Object>);

        #[cfg(feature = "AppKit_NSColorList")]
        #[method(attachColorList:)]
        pub unsafe fn attachColorList(&self, colorList: &AppKit::NSColorList);

        #[cfg(feature = "AppKit_NSColorList")]
        #[method(detachColorList:)]
        pub unsafe fn detachColorList(&self, colorList: &AppKit::NSColorList);

        #[method(setMode:)]
        pub unsafe fn setMode(&self, mode: AppKit::NSColorPanelMode);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other buttonToolTip)]
        pub unsafe fn buttonToolTip(&self) -> Id<Foundation::NSString, Shared>;

        #[method(minContentSize)]
        pub unsafe fn minContentSize(&self) -> Foundation::NSSize;
    }
);
