//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation;
use crate::Foundation;

ns_enum!(
    #[underlying(c_int)]
    pub enum CAConstraintAttribute {
        kCAConstraintMinX = 0,
        kCAConstraintMidX = 1,
        kCAConstraintMaxX = 2,
        kCAConstraintWidth = 3,
        kCAConstraintMinY = 4,
        kCAConstraintMidY = 5,
        kCAConstraintMaxY = 6,
        kCAConstraintHeight = 7,
    }
);

extern_methods!(
    /// CAConstraintLayoutManager
    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl QuartzCore::CALayer {
        #[cfg(all(feature = "Foundation_NSArray", feature = "QuartzCore_CAConstraint"))]
        #[method_id(@__retain_semantics Other constraints)]
        pub unsafe fn constraints(
            &self,
        ) -> Option<Id<Foundation::NSArray<QuartzCore::CAConstraint>, Shared>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "QuartzCore_CAConstraint"))]
        #[method(setConstraints:)]
        pub unsafe fn setConstraints(
            &self,
            constraints: Option<&Foundation::NSArray<QuartzCore::CAConstraint>>,
        );

        #[cfg(feature = "QuartzCore_CAConstraint")]
        #[method(addConstraint:)]
        pub unsafe fn addConstraint(&self, c: &QuartzCore::CAConstraint);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAConstraintLayoutManager;

    unsafe impl ClassType for CAConstraintLayoutManager {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "QuartzCore_CAConstraintLayoutManager")]
    unsafe impl CAConstraintLayoutManager {
        #[method_id(@__retain_semantics Other layoutManager)]
        pub unsafe fn layoutManager() -> Id<Self, Shared>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAConstraint;

    unsafe impl ClassType for CAConstraint {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "QuartzCore_CAConstraint")]
    unsafe impl CAConstraint {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other constraintWithAttribute:relativeTo:attribute:scale:offset:)]
        pub unsafe fn constraintWithAttribute_relativeTo_attribute_scale_offset(
            attr: CAConstraintAttribute,
            srcId: &Foundation::NSString,
            srcAttr: CAConstraintAttribute,
            m: CGFloat,
            c: CGFloat,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other constraintWithAttribute:relativeTo:attribute:offset:)]
        pub unsafe fn constraintWithAttribute_relativeTo_attribute_offset(
            attr: CAConstraintAttribute,
            srcId: &Foundation::NSString,
            srcAttr: CAConstraintAttribute,
            c: CGFloat,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other constraintWithAttribute:relativeTo:attribute:)]
        pub unsafe fn constraintWithAttribute_relativeTo_attribute(
            attr: CAConstraintAttribute,
            srcId: &Foundation::NSString,
            srcAttr: CAConstraintAttribute,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithAttribute:relativeTo:attribute:scale:offset:)]
        pub unsafe fn initWithAttribute_relativeTo_attribute_scale_offset(
            this: Option<Allocated<Self>>,
            attr: CAConstraintAttribute,
            srcId: &Foundation::NSString,
            srcAttr: CAConstraintAttribute,
            m: CGFloat,
            c: CGFloat,
        ) -> Id<Self, Shared>;

        #[method(attribute)]
        pub unsafe fn attribute(&self) -> CAConstraintAttribute;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other sourceName)]
        pub unsafe fn sourceName(&self) -> Id<Foundation::NSString, Shared>;

        #[method(sourceAttribute)]
        pub unsafe fn sourceAttribute(&self) -> CAConstraintAttribute;

        #[method(scale)]
        pub unsafe fn scale(&self) -> CGFloat;

        #[method(offset)]
        pub unsafe fn offset(&self) -> CGFloat;
    }
);
