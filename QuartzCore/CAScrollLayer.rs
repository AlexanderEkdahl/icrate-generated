//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreAnimation;
use crate::Foundation;

typed_enum!(
    pub type CAScrollLayerScrollMode = Foundation::NSString;
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAScrollLayer;

    unsafe impl ClassType for CAScrollLayer {
        #[inherits(NSObject)]
        type Super = QuartzCore::CALayer;
    }
);

extern_methods!(
    #[cfg(feature = "QuartzCore_CAScrollLayer")]
    unsafe impl CAScrollLayer {
        #[method(scrollToPoint:)]
        pub unsafe fn scrollToPoint(&self, p: CGPoint);

        #[method(scrollToRect:)]
        pub unsafe fn scrollToRect(&self, r: CGRect);

        #[cfg(feature = "QuartzCore_CAScrollLayerScrollMode")]
        #[method_id(@__retain_semantics Other scrollMode)]
        pub unsafe fn scrollMode(&self) -> Id<QuartzCore::CAScrollLayerScrollMode, Shared>;

        #[cfg(feature = "QuartzCore_CAScrollLayerScrollMode")]
        #[method(setScrollMode:)]
        pub unsafe fn setScrollMode(&self, scrollMode: &QuartzCore::CAScrollLayerScrollMode);
    }
);

extern_methods!(
    /// CALayerScrolling
    #[cfg(feature = "QuartzCore_CALayer")]
    unsafe impl QuartzCore::CALayer {
        #[method(scrollPoint:)]
        pub unsafe fn scrollPoint(&self, p: CGPoint);

        #[method(scrollRectToVisible:)]
        pub unsafe fn scrollRectToVisible(&self, r: CGRect);

        #[method(visibleRect)]
        pub unsafe fn visibleRect(&self) -> CGRect;
    }
);

extern_static!(kCAScrollNone: &'static QuartzCore::CAScrollLayerScrollMode);

extern_static!(kCAScrollVertically: &'static QuartzCore::CAScrollLayerScrollMode);

extern_static!(kCAScrollHorizontally: &'static QuartzCore::CAScrollLayerScrollMode);

extern_static!(kCAScrollBoth: &'static QuartzCore::CAScrollLayerScrollMode);

extern_methods!(
    /// Methods declared on superclass `CALayer`
    #[cfg(feature = "QuartzCore_CAScrollLayer")]
    unsafe impl QuartzCore::CAScrollLayer {
        #[method_id(@__retain_semantics Other layer)]
        pub unsafe fn layer() -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init initWithLayer:)]
        pub unsafe fn initWithLayer(
            this: Option<Allocated<Self>>,
            layer: &Object,
        ) -> Id<Self, Shared>;
    }
);
