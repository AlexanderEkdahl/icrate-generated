//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices;
use crate::Foundation;

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASCredentialProviderViewController")]
    unsafe impl ASCredentialProviderViewController {
        #[cfg(feature = "AuthenticationServices_ASCredentialProviderExtensionContext")]
        #[method_id(@__retain_semantics Other extensionContext)]
        pub unsafe fn extensionContext(
            &self,
        ) -> Id<AuthenticationServices::ASCredentialProviderExtensionContext, Shared>;

        #[cfg(all(
            feature = "AuthenticationServices_ASCredentialServiceIdentifier",
            feature = "Foundation_NSArray"
        ))]
        #[method(prepareCredentialListForServiceIdentifiers:)]
        pub unsafe fn prepareCredentialListForServiceIdentifiers(
            &self,
            serviceIdentifiers: &Foundation::NSArray<
                AuthenticationServices::ASCredentialServiceIdentifier,
            >,
        );

        #[cfg(feature = "AuthenticationServices_ASPasswordCredentialIdentity")]
        #[method(provideCredentialWithoutUserInteractionForIdentity:)]
        pub unsafe fn provideCredentialWithoutUserInteractionForIdentity(
            &self,
            credentialIdentity: &AuthenticationServices::ASPasswordCredentialIdentity,
        );

        #[cfg(feature = "AuthenticationServices_ASPasswordCredentialIdentity")]
        #[method(prepareInterfaceToProvideCredentialForIdentity:)]
        pub unsafe fn prepareInterfaceToProvideCredentialForIdentity(
            &self,
            credentialIdentity: &AuthenticationServices::ASPasswordCredentialIdentity,
        );

        #[method(prepareInterfaceForExtensionConfiguration)]
        pub unsafe fn prepareInterfaceForExtensionConfiguration(&self);
    }
);
