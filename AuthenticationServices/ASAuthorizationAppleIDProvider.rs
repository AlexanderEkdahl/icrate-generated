//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices;
use crate::Foundation;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationAppleIDProviderCredentialState {
        ASAuthorizationAppleIDProviderCredentialRevoked = 0,
        ASAuthorizationAppleIDProviderCredentialAuthorized = 1,
        ASAuthorizationAppleIDProviderCredentialNotFound = 2,
        ASAuthorizationAppleIDProviderCredentialTransferred = 3,
    }
);

extern_static!(
    ASAuthorizationAppleIDProviderCredentialRevokedNotification:
        &'static Foundation::NSNotificationName
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationAppleIDProvider;

    unsafe impl ClassType for ASAuthorizationAppleIDProvider {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDProvider")]
    unsafe impl ASAuthorizationAppleIDProvider {
        #[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDRequest")]
        #[method_id(@__retain_semantics Other createRequest)]
        pub unsafe fn createRequest(
            &self,
        ) -> Id<AuthenticationServices::ASAuthorizationAppleIDRequest, Shared>;

        #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSString"))]
        #[method(getCredentialStateForUserID:completion:)]
        pub unsafe fn getCredentialStateForUserID_completion(
            &self,
            userID: &Foundation::NSString,
            completion: &Block<
                (
                    ASAuthorizationAppleIDProviderCredentialState,
                    *mut Foundation::NSError,
                ),
                (),
            >,
        );
    }
);
