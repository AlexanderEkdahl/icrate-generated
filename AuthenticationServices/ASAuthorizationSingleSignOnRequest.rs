//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationSingleSignOnRequest;

    unsafe impl ClassType for ASAuthorizationSingleSignOnRequest {
        #[inherits(AuthenticationServices::ASAuthorizationRequest, NSObject)]
        type Super = AuthenticationServices::ASAuthorizationOpenIDRequest;
    }
);

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASAuthorizationSingleSignOnRequest")]
    unsafe impl ASAuthorizationSingleSignOnRequest {
        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURLQueryItem"))]
        #[method_id(@__retain_semantics Other authorizationOptions)]
        pub unsafe fn authorizationOptions(
            &self,
        ) -> Id<Foundation::NSArray<Foundation::NSURLQueryItem>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURLQueryItem"))]
        #[method(setAuthorizationOptions:)]
        pub unsafe fn setAuthorizationOptions(
            &self,
            authorizationOptions: &Foundation::NSArray<Foundation::NSURLQueryItem>,
        );

        #[method(isUserInterfaceEnabled)]
        pub unsafe fn isUserInterfaceEnabled(&self) -> bool;

        #[method(setUserInterfaceEnabled:)]
        pub unsafe fn setUserInterfaceEnabled(&self, userInterfaceEnabled: bool);
    }
);
