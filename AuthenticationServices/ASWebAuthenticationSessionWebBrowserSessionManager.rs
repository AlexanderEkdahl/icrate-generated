//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASWebAuthenticationSessionWebBrowserSessionManager;

    unsafe impl ClassType for ASWebAuthenticationSessionWebBrowserSessionManager {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionManager")]
    unsafe impl ASWebAuthenticationSessionWebBrowserSessionManager {
        #[method_id(@__retain_semantics Other sharedManager)]
        pub unsafe fn sharedManager(
        ) -> Id<ASWebAuthenticationSessionWebBrowserSessionManager, Shared>;

        #[cfg(
            feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionHandling"
        )]
        #[method_id(@__retain_semantics Other sessionHandler)]
        pub unsafe fn sessionHandler(
            &self,
        ) -> Id<ASWebAuthenticationSessionWebBrowserSessionHandling, Shared>;

        #[cfg(
            feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionHandling"
        )]
        #[method(setSessionHandler:)]
        pub unsafe fn setSessionHandler(
            &self,
            sessionHandler: &ASWebAuthenticationSessionWebBrowserSessionHandling,
        );

        #[method(wasLaunchedByAuthenticationServices)]
        pub unsafe fn wasLaunchedByAuthenticationServices(&self) -> bool;

        #[method(registerDefaultsForASWASInSetupAssistantIfNeeded)]
        pub unsafe fn registerDefaultsForASWASInSetupAssistantIfNeeded();
    }
);
