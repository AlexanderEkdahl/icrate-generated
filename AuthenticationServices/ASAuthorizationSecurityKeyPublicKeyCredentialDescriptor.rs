//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AuthenticationServices;
use crate::Foundation;

typed_extensible_enum!(
    pub type ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport =
        Foundation::NSString;
);

extern_static!(ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB: &'static AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport);

extern_static!(ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC: &'static AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport);

extern_static!(ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth: &'static AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport);

extern_fn!(
    pub unsafe fn ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports() -> NonNull<Foundation::NSArray<AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport,>>;
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;

    unsafe impl ClassType for ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"
    )]
    unsafe impl ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor {
        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSData"))]
        #[method_id(@__retain_semantics Init initWithCredentialID:transports:)]
        pub unsafe fn initWithCredentialID_transports(
            this: Option<Allocated<Self>>,
            credentialID: &Foundation::NSData,
            allowedTransports: &Foundation::NSArray<AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport,>,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other transports)]
        pub unsafe fn transports(&self, ) -> Id<Foundation::NSArray<AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport,>, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method(setTransports:)]
        pub unsafe fn setTransports(
            &self,
            transports: &Foundation::NSArray<AuthenticationServices::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport,>,
        );

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;
    }
);
