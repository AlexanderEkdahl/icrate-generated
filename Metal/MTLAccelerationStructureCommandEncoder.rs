//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;
use crate::Metal;

extern_protocol!(
    pub struct MTLAccelerationStructureCommandEncoder;

    unsafe impl ProtocolType for MTLAccelerationStructureCommandEncoder {
        #[method(buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:)]
        pub fn buildAccelerationStructure_descriptor_scratchBuffer_scratchBufferOffset(
            &self,
            accelerationStructure: &Metal::MTLAccelerationStructure,
            descriptor: &Metal::MTLAccelerationStructureDescriptor,
            scratchBuffer: &Metal::MTLBuffer,
            scratchBufferOffset: NSUInteger,
        );

        #[method(refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:)]
        pub unsafe fn refitAccelerationStructure_descriptor_destination_scratchBuffer_scratchBufferOffset(
            &self,
            sourceAccelerationStructure: &Metal::MTLAccelerationStructure,
            descriptor: &Metal::MTLAccelerationStructureDescriptor,
            destinationAccelerationStructure: Option<&Metal::MTLAccelerationStructure>,
            scratchBuffer: &Metal::MTLBuffer,
            scratchBufferOffset: NSUInteger,
        );

        #[method(copyAccelerationStructure:toAccelerationStructure:)]
        pub unsafe fn copyAccelerationStructure_toAccelerationStructure(
            &self,
            sourceAccelerationStructure: &Metal::MTLAccelerationStructure,
            destinationAccelerationStructure: &Metal::MTLAccelerationStructure,
        );

        #[method(writeCompactedAccelerationStructureSize:toBuffer:offset:)]
        pub fn writeCompactedAccelerationStructureSize_toBuffer_offset(
            &self,
            accelerationStructure: &Metal::MTLAccelerationStructure,
            buffer: &Metal::MTLBuffer,
            offset: NSUInteger,
        );

        #[method(writeCompactedAccelerationStructureSize:toBuffer:offset:sizeDataType:)]
        pub unsafe fn writeCompactedAccelerationStructureSize_toBuffer_offset_sizeDataType(
            &self,
            accelerationStructure: &Metal::MTLAccelerationStructure,
            buffer: &Metal::MTLBuffer,
            offset: NSUInteger,
            sizeDataType: MTLDataType,
        );

        #[method(copyAndCompactAccelerationStructure:toAccelerationStructure:)]
        pub fn copyAndCompactAccelerationStructure_toAccelerationStructure(
            &self,
            sourceAccelerationStructure: &Metal::MTLAccelerationStructure,
            destinationAccelerationStructure: &Metal::MTLAccelerationStructure,
        );

        #[method(updateFence:)]
        pub unsafe fn updateFence(&self, fence: &Metal::MTLFence);

        #[method(waitForFence:)]
        pub unsafe fn waitForFence(&self, fence: &Metal::MTLFence);

        #[method(useResource:usage:)]
        pub unsafe fn useResource_usage(
            &self,
            resource: &Metal::MTLResource,
            usage: MTLResourceUsage,
        );

        #[method(useResources:count:usage:)]
        pub unsafe fn useResources_count_usage(
            &self,
            resources: NonNull<NonNull<Metal::MTLResource>>,
            count: NSUInteger,
            usage: MTLResourceUsage,
        );

        #[method(useHeap:)]
        pub unsafe fn useHeap(&self, heap: &Metal::MTLHeap);

        #[method(useHeaps:count:)]
        pub unsafe fn useHeaps_count(
            &self,
            heaps: NonNull<NonNull<Metal::MTLHeap>>,
            count: NSUInteger,
        );

        #[method(sampleCountersInBuffer:atSampleIndex:withBarrier:)]
        pub unsafe fn sampleCountersInBuffer_atSampleIndex_withBarrier(
            &self,
            sampleBuffer: &Metal::MTLCounterSampleBuffer,
            sampleIndex: NSUInteger,
            barrier: bool,
        );
    }
);
