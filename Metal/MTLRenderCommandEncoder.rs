//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;
use crate::Metal;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLPrimitiveType {
        MTLPrimitiveTypePoint = 0,
        MTLPrimitiveTypeLine = 1,
        MTLPrimitiveTypeLineStrip = 2,
        MTLPrimitiveTypeTriangle = 3,
        MTLPrimitiveTypeTriangleStrip = 4,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLVisibilityResultMode {
        MTLVisibilityResultModeDisabled = 0,
        MTLVisibilityResultModeBoolean = 1,
        MTLVisibilityResultModeCounting = 2,
    }
);

extern_struct!(
    pub struct MTLScissorRect {
        pub x: NSUInteger,
        pub y: NSUInteger,
        pub width: NSUInteger,
        pub height: NSUInteger,
    }
);

extern_struct!(
    pub struct MTLViewport {
        pub originX: c_double,
        pub originY: c_double,
        pub width: c_double,
        pub height: c_double,
        pub znear: c_double,
        pub zfar: c_double,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLCullMode {
        MTLCullModeNone = 0,
        MTLCullModeFront = 1,
        MTLCullModeBack = 2,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLWinding {
        MTLWindingClockwise = 0,
        MTLWindingCounterClockwise = 1,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLDepthClipMode {
        MTLDepthClipModeClip = 0,
        MTLDepthClipModeClamp = 1,
    }
);

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum MTLTriangleFillMode {
        MTLTriangleFillModeFill = 0,
        MTLTriangleFillModeLines = 1,
    }
);

extern_struct!(
    pub struct MTLDrawPrimitivesIndirectArguments {
        pub vertexCount: u32,
        pub instanceCount: u32,
        pub vertexStart: u32,
        pub baseInstance: u32,
    }
);

extern_struct!(
    pub struct MTLDrawIndexedPrimitivesIndirectArguments {
        pub indexCount: u32,
        pub instanceCount: u32,
        pub indexStart: u32,
        pub baseVertex: i32,
        pub baseInstance: u32,
    }
);

extern_struct!(
    pub struct MTLVertexAmplificationViewMapping {
        pub viewportArrayIndexOffset: u32,
        pub renderTargetArrayIndexOffset: u32,
    }
);

extern_struct!(
    pub struct MTLDrawPatchIndirectArguments {
        pub patchCount: u32,
        pub instanceCount: u32,
        pub patchStart: u32,
        pub baseInstance: u32,
    }
);

extern_struct!(
    pub struct MTLQuadTessellationFactorsHalf {
        pub edgeTessellationFactor: [u16; 4],
        pub insideTessellationFactor: [u16; 2],
    }
);

extern_struct!(
    pub struct MTLTriangleTessellationFactorsHalf {
        pub edgeTessellationFactor: [u16; 3],
        pub insideTessellationFactor: u16,
    }
);

ns_options!(
    #[underlying(NSUInteger)]
    pub enum MTLRenderStages {
        MTLRenderStageVertex = 1 << 0,
        MTLRenderStageFragment = 1 << 1,
        MTLRenderStageTile = 1 << 2,
    }
);

extern_protocol!(
    pub struct MTLRenderCommandEncoder;

    unsafe impl ProtocolType for MTLRenderCommandEncoder {
        #[method(setRenderPipelineState:)]
        pub fn setRenderPipelineState(&self, pipelineState: &Metal::MTLRenderPipelineState);

        #[method(setVertexBytes:length:atIndex:)]
        pub unsafe fn setVertexBytes_length_atIndex(
            &self,
            bytes: NonNull<c_void>,
            length: NSUInteger,
            index: NSUInteger,
        );

        #[method(setVertexBuffer:offset:atIndex:)]
        pub unsafe fn setVertexBuffer_offset_atIndex(
            &self,
            buffer: Option<&Metal::MTLBuffer>,
            offset: NSUInteger,
            index: NSUInteger,
        );

        #[method(setVertexBufferOffset:atIndex:)]
        pub unsafe fn setVertexBufferOffset_atIndex(&self, offset: NSUInteger, index: NSUInteger);

        #[method(setVertexBuffers:offsets:withRange:)]
        pub unsafe fn setVertexBuffers_offsets_withRange(
            &self,
            buffers: NonNull<*const Metal::MTLBuffer>,
            offsets: NonNull<NSUInteger>,
            range: Foundation::NSRange,
        );

        #[method(setVertexTexture:atIndex:)]
        pub unsafe fn setVertexTexture_atIndex(
            &self,
            texture: Option<&Metal::MTLTexture>,
            index: NSUInteger,
        );

        #[method(setVertexTextures:withRange:)]
        pub unsafe fn setVertexTextures_withRange(
            &self,
            textures: NonNull<*const Metal::MTLTexture>,
            range: Foundation::NSRange,
        );

        #[method(setVertexSamplerState:atIndex:)]
        pub unsafe fn setVertexSamplerState_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            index: NSUInteger,
        );

        #[method(setVertexSamplerStates:withRange:)]
        pub unsafe fn setVertexSamplerStates_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            range: Foundation::NSRange,
        );

        #[method(setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:)]
        pub unsafe fn setVertexSamplerState_lodMinClamp_lodMaxClamp_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            lodMinClamp: c_float,
            lodMaxClamp: c_float,
            index: NSUInteger,
        );

        #[method(setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:)]
        pub unsafe fn setVertexSamplerStates_lodMinClamps_lodMaxClamps_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            lodMinClamps: NonNull<c_float>,
            lodMaxClamps: NonNull<c_float>,
            range: Foundation::NSRange,
        );

        #[method(setVertexVisibleFunctionTable:atBufferIndex:)]
        pub unsafe fn setVertexVisibleFunctionTable_atBufferIndex(
            &self,
            functionTable: Option<&Metal::MTLVisibleFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setVertexVisibleFunctionTables:withBufferRange:)]
        pub unsafe fn setVertexVisibleFunctionTables_withBufferRange(
            &self,
            functionTables: NonNull<*const Metal::MTLVisibleFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setVertexIntersectionFunctionTable:atBufferIndex:)]
        pub unsafe fn setVertexIntersectionFunctionTable_atBufferIndex(
            &self,
            intersectionFunctionTable: Option<&Metal::MTLIntersectionFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setVertexIntersectionFunctionTables:withBufferRange:)]
        pub unsafe fn setVertexIntersectionFunctionTables_withBufferRange(
            &self,
            intersectionFunctionTable: NonNull<*const Metal::MTLIntersectionFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setVertexAccelerationStructure:atBufferIndex:)]
        pub unsafe fn setVertexAccelerationStructure_atBufferIndex(
            &self,
            accelerationStructure: Option<&Metal::MTLAccelerationStructure>,
            bufferIndex: NSUInteger,
        );

        #[method(setViewport:)]
        pub fn setViewport(&self, viewport: Metal::MTLViewport);

        #[method(setViewports:count:)]
        pub unsafe fn setViewports_count(
            &self,
            viewports: NonNull<Metal::MTLViewport>,
            count: NSUInteger,
        );

        #[method(setFrontFacingWinding:)]
        pub fn setFrontFacingWinding(&self, frontFacingWinding: Metal::MTLWinding);

        #[method(setVertexAmplificationCount:viewMappings:)]
        pub unsafe fn setVertexAmplificationCount_viewMappings(
            &self,
            count: NSUInteger,
            viewMappings: *mut Metal::MTLVertexAmplificationViewMapping,
        );

        #[method(setCullMode:)]
        pub fn setCullMode(&self, cullMode: Metal::MTLCullMode);

        #[method(setDepthClipMode:)]
        pub fn setDepthClipMode(&self, depthClipMode: Metal::MTLDepthClipMode);

        #[method(setDepthBias:slopeScale:clamp:)]
        pub fn setDepthBias_slopeScale_clamp(
            &self,
            depthBias: c_float,
            slopeScale: c_float,
            clamp: c_float,
        );

        #[method(setScissorRect:)]
        pub fn setScissorRect(&self, rect: Metal::MTLScissorRect);

        #[method(setScissorRects:count:)]
        pub unsafe fn setScissorRects_count(
            &self,
            scissorRects: NonNull<Metal::MTLScissorRect>,
            count: NSUInteger,
        );

        #[method(setTriangleFillMode:)]
        pub fn setTriangleFillMode(&self, fillMode: Metal::MTLTriangleFillMode);

        #[method(setFragmentBytes:length:atIndex:)]
        pub unsafe fn setFragmentBytes_length_atIndex(
            &self,
            bytes: NonNull<c_void>,
            length: NSUInteger,
            index: NSUInteger,
        );

        #[method(setFragmentBuffer:offset:atIndex:)]
        pub unsafe fn setFragmentBuffer_offset_atIndex(
            &self,
            buffer: Option<&Metal::MTLBuffer>,
            offset: NSUInteger,
            index: NSUInteger,
        );

        #[method(setFragmentBufferOffset:atIndex:)]
        pub unsafe fn setFragmentBufferOffset_atIndex(&self, offset: NSUInteger, index: NSUInteger);

        #[method(setFragmentBuffers:offsets:withRange:)]
        pub unsafe fn setFragmentBuffers_offsets_withRange(
            &self,
            buffers: NonNull<*const Metal::MTLBuffer>,
            offsets: NonNull<NSUInteger>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentTexture:atIndex:)]
        pub unsafe fn setFragmentTexture_atIndex(
            &self,
            texture: Option<&Metal::MTLTexture>,
            index: NSUInteger,
        );

        #[method(setFragmentTextures:withRange:)]
        pub unsafe fn setFragmentTextures_withRange(
            &self,
            textures: NonNull<*const Metal::MTLTexture>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentSamplerState:atIndex:)]
        pub unsafe fn setFragmentSamplerState_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            index: NSUInteger,
        );

        #[method(setFragmentSamplerStates:withRange:)]
        pub unsafe fn setFragmentSamplerStates_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:)]
        pub unsafe fn setFragmentSamplerState_lodMinClamp_lodMaxClamp_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            lodMinClamp: c_float,
            lodMaxClamp: c_float,
            index: NSUInteger,
        );

        #[method(setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:)]
        pub unsafe fn setFragmentSamplerStates_lodMinClamps_lodMaxClamps_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            lodMinClamps: NonNull<c_float>,
            lodMaxClamps: NonNull<c_float>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentVisibleFunctionTable:atBufferIndex:)]
        pub unsafe fn setFragmentVisibleFunctionTable_atBufferIndex(
            &self,
            functionTable: Option<&Metal::MTLVisibleFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setFragmentVisibleFunctionTables:withBufferRange:)]
        pub unsafe fn setFragmentVisibleFunctionTables_withBufferRange(
            &self,
            functionTables: NonNull<*const Metal::MTLVisibleFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentIntersectionFunctionTable:atBufferIndex:)]
        pub unsafe fn setFragmentIntersectionFunctionTable_atBufferIndex(
            &self,
            intersectionFunctionTable: Option<&Metal::MTLIntersectionFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setFragmentIntersectionFunctionTables:withBufferRange:)]
        pub unsafe fn setFragmentIntersectionFunctionTables_withBufferRange(
            &self,
            intersectionFunctionTable: NonNull<*const Metal::MTLIntersectionFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setFragmentAccelerationStructure:atBufferIndex:)]
        pub unsafe fn setFragmentAccelerationStructure_atBufferIndex(
            &self,
            accelerationStructure: Option<&Metal::MTLAccelerationStructure>,
            bufferIndex: NSUInteger,
        );

        #[method(setBlendColorRed:green:blue:alpha:)]
        pub fn setBlendColorRed_green_blue_alpha(
            &self,
            red: c_float,
            green: c_float,
            blue: c_float,
            alpha: c_float,
        );

        #[method(setDepthStencilState:)]
        pub fn setDepthStencilState(&self, depthStencilState: Option<&Metal::MTLDepthStencilState>);

        #[method(setStencilReferenceValue:)]
        pub fn setStencilReferenceValue(&self, referenceValue: u32);

        #[method(setStencilFrontReferenceValue:backReferenceValue:)]
        pub fn setStencilFrontReferenceValue_backReferenceValue(
            &self,
            frontReferenceValue: u32,
            backReferenceValue: u32,
        );

        #[method(setVisibilityResultMode:offset:)]
        pub fn setVisibilityResultMode_offset(
            &self,
            mode: Metal::MTLVisibilityResultMode,
            offset: NSUInteger,
        );

        #[method(setColorStoreAction:atIndex:)]
        pub unsafe fn setColorStoreAction_atIndex(
            &self,
            storeAction: Metal::MTLStoreAction,
            colorAttachmentIndex: NSUInteger,
        );

        #[method(setDepthStoreAction:)]
        pub unsafe fn setDepthStoreAction(&self, storeAction: Metal::MTLStoreAction);

        #[method(setStencilStoreAction:)]
        pub unsafe fn setStencilStoreAction(&self, storeAction: Metal::MTLStoreAction);

        #[method(setColorStoreActionOptions:atIndex:)]
        pub unsafe fn setColorStoreActionOptions_atIndex(
            &self,
            storeActionOptions: Metal::MTLStoreActionOptions,
            colorAttachmentIndex: NSUInteger,
        );

        #[method(setDepthStoreActionOptions:)]
        pub unsafe fn setDepthStoreActionOptions(
            &self,
            storeActionOptions: Metal::MTLStoreActionOptions,
        );

        #[method(setStencilStoreActionOptions:)]
        pub unsafe fn setStencilStoreActionOptions(
            &self,
            storeActionOptions: Metal::MTLStoreActionOptions,
        );

        #[method(drawPrimitives:vertexStart:vertexCount:instanceCount:)]
        pub unsafe fn drawPrimitives_vertexStart_vertexCount_instanceCount(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            vertexStart: NSUInteger,
            vertexCount: NSUInteger,
            instanceCount: NSUInteger,
        );

        #[method(drawPrimitives:vertexStart:vertexCount:)]
        pub unsafe fn drawPrimitives_vertexStart_vertexCount(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            vertexStart: NSUInteger,
            vertexCount: NSUInteger,
        );

        #[method(drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:)]
        pub unsafe fn drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            indexCount: NSUInteger,
            indexType: Metal::MTLIndexType,
            indexBuffer: &Metal::MTLBuffer,
            indexBufferOffset: NSUInteger,
            instanceCount: NSUInteger,
        );

        #[method(drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:)]
        pub unsafe fn drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            indexCount: NSUInteger,
            indexType: Metal::MTLIndexType,
            indexBuffer: &Metal::MTLBuffer,
            indexBufferOffset: NSUInteger,
        );

        #[method(drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:)]
        pub unsafe fn drawPrimitives_vertexStart_vertexCount_instanceCount_baseInstance(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            vertexStart: NSUInteger,
            vertexCount: NSUInteger,
            instanceCount: NSUInteger,
            baseInstance: NSUInteger,
        );

        #[method(drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:)]
        pub unsafe fn drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_baseVertex_baseInstance(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            indexCount: NSUInteger,
            indexType: Metal::MTLIndexType,
            indexBuffer: &Metal::MTLBuffer,
            indexBufferOffset: NSUInteger,
            instanceCount: NSUInteger,
            baseVertex: NSInteger,
            baseInstance: NSUInteger,
        );

        #[method(drawPrimitives:indirectBuffer:indirectBufferOffset:)]
        pub unsafe fn drawPrimitives_indirectBuffer_indirectBufferOffset(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            indirectBuffer: &Metal::MTLBuffer,
            indirectBufferOffset: NSUInteger,
        );

        #[method(drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:)]
        pub unsafe fn drawIndexedPrimitives_indexType_indexBuffer_indexBufferOffset_indirectBuffer_indirectBufferOffset(
            &self,
            primitiveType: Metal::MTLPrimitiveType,
            indexType: Metal::MTLIndexType,
            indexBuffer: &Metal::MTLBuffer,
            indexBufferOffset: NSUInteger,
            indirectBuffer: &Metal::MTLBuffer,
            indirectBufferOffset: NSUInteger,
        );

        #[method(textureBarrier)]
        pub unsafe fn textureBarrier(&self);

        #[method(updateFence:afterStages:)]
        pub fn updateFence_afterStages(
            &self,
            fence: &Metal::MTLFence,
            stages: Metal::MTLRenderStages,
        );

        #[method(waitForFence:beforeStages:)]
        pub fn waitForFence_beforeStages(
            &self,
            fence: &Metal::MTLFence,
            stages: Metal::MTLRenderStages,
        );

        #[method(setTessellationFactorBuffer:offset:instanceStride:)]
        pub unsafe fn setTessellationFactorBuffer_offset_instanceStride(
            &self,
            buffer: Option<&Metal::MTLBuffer>,
            offset: NSUInteger,
            instanceStride: NSUInteger,
        );

        #[method(setTessellationFactorScale:)]
        pub unsafe fn setTessellationFactorScale(&self, scale: c_float);

        #[method(drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:)]
        pub unsafe fn drawPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_instanceCount_baseInstance(
            &self,
            numberOfPatchControlPoints: NSUInteger,
            patchStart: NSUInteger,
            patchCount: NSUInteger,
            patchIndexBuffer: Option<&Metal::MTLBuffer>,
            patchIndexBufferOffset: NSUInteger,
            instanceCount: NSUInteger,
            baseInstance: NSUInteger,
        );

        #[method(drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:)]
        pub unsafe fn drawPatches_patchIndexBuffer_patchIndexBufferOffset_indirectBuffer_indirectBufferOffset(
            &self,
            numberOfPatchControlPoints: NSUInteger,
            patchIndexBuffer: Option<&Metal::MTLBuffer>,
            patchIndexBufferOffset: NSUInteger,
            indirectBuffer: &Metal::MTLBuffer,
            indirectBufferOffset: NSUInteger,
        );

        #[method(drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:)]
        pub unsafe fn drawIndexedPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_instanceCount_baseInstance(
            &self,
            numberOfPatchControlPoints: NSUInteger,
            patchStart: NSUInteger,
            patchCount: NSUInteger,
            patchIndexBuffer: Option<&Metal::MTLBuffer>,
            patchIndexBufferOffset: NSUInteger,
            controlPointIndexBuffer: &Metal::MTLBuffer,
            controlPointIndexBufferOffset: NSUInteger,
            instanceCount: NSUInteger,
            baseInstance: NSUInteger,
        );

        #[method(drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:)]
        pub unsafe fn drawIndexedPatches_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_indirectBuffer_indirectBufferOffset(
            &self,
            numberOfPatchControlPoints: NSUInteger,
            patchIndexBuffer: Option<&Metal::MTLBuffer>,
            patchIndexBufferOffset: NSUInteger,
            controlPointIndexBuffer: &Metal::MTLBuffer,
            controlPointIndexBufferOffset: NSUInteger,
            indirectBuffer: &Metal::MTLBuffer,
            indirectBufferOffset: NSUInteger,
        );

        #[method(tileWidth)]
        pub unsafe fn tileWidth(&self) -> NSUInteger;

        #[method(tileHeight)]
        pub unsafe fn tileHeight(&self) -> NSUInteger;

        #[method(setTileBytes:length:atIndex:)]
        pub unsafe fn setTileBytes_length_atIndex(
            &self,
            bytes: NonNull<c_void>,
            length: NSUInteger,
            index: NSUInteger,
        );

        #[method(setTileBuffer:offset:atIndex:)]
        pub unsafe fn setTileBuffer_offset_atIndex(
            &self,
            buffer: Option<&Metal::MTLBuffer>,
            offset: NSUInteger,
            index: NSUInteger,
        );

        #[method(setTileBufferOffset:atIndex:)]
        pub unsafe fn setTileBufferOffset_atIndex(&self, offset: NSUInteger, index: NSUInteger);

        #[method(setTileBuffers:offsets:withRange:)]
        pub unsafe fn setTileBuffers_offsets_withRange(
            &self,
            buffers: NonNull<*const Metal::MTLBuffer>,
            offsets: NonNull<NSUInteger>,
            range: Foundation::NSRange,
        );

        #[method(setTileTexture:atIndex:)]
        pub unsafe fn setTileTexture_atIndex(
            &self,
            texture: Option<&Metal::MTLTexture>,
            index: NSUInteger,
        );

        #[method(setTileTextures:withRange:)]
        pub unsafe fn setTileTextures_withRange(
            &self,
            textures: NonNull<*const Metal::MTLTexture>,
            range: Foundation::NSRange,
        );

        #[method(setTileSamplerState:atIndex:)]
        pub unsafe fn setTileSamplerState_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            index: NSUInteger,
        );

        #[method(setTileSamplerStates:withRange:)]
        pub unsafe fn setTileSamplerStates_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            range: Foundation::NSRange,
        );

        #[method(setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:)]
        pub unsafe fn setTileSamplerState_lodMinClamp_lodMaxClamp_atIndex(
            &self,
            sampler: Option<&Metal::MTLSamplerState>,
            lodMinClamp: c_float,
            lodMaxClamp: c_float,
            index: NSUInteger,
        );

        #[method(setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:)]
        pub unsafe fn setTileSamplerStates_lodMinClamps_lodMaxClamps_withRange(
            &self,
            samplers: NonNull<*const Metal::MTLSamplerState>,
            lodMinClamps: NonNull<c_float>,
            lodMaxClamps: NonNull<c_float>,
            range: Foundation::NSRange,
        );

        #[method(setTileVisibleFunctionTable:atBufferIndex:)]
        pub unsafe fn setTileVisibleFunctionTable_atBufferIndex(
            &self,
            functionTable: Option<&Metal::MTLVisibleFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setTileVisibleFunctionTables:withBufferRange:)]
        pub unsafe fn setTileVisibleFunctionTables_withBufferRange(
            &self,
            functionTables: NonNull<*const Metal::MTLVisibleFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setTileIntersectionFunctionTable:atBufferIndex:)]
        pub unsafe fn setTileIntersectionFunctionTable_atBufferIndex(
            &self,
            intersectionFunctionTable: Option<&Metal::MTLIntersectionFunctionTable>,
            bufferIndex: NSUInteger,
        );

        #[method(setTileIntersectionFunctionTables:withBufferRange:)]
        pub unsafe fn setTileIntersectionFunctionTables_withBufferRange(
            &self,
            intersectionFunctionTable: NonNull<*const Metal::MTLIntersectionFunctionTable>,
            range: Foundation::NSRange,
        );

        #[method(setTileAccelerationStructure:atBufferIndex:)]
        pub unsafe fn setTileAccelerationStructure_atBufferIndex(
            &self,
            accelerationStructure: Option<&Metal::MTLAccelerationStructure>,
            bufferIndex: NSUInteger,
        );

        #[method(dispatchThreadsPerTile:)]
        pub unsafe fn dispatchThreadsPerTile(&self, threadsPerTile: Metal::MTLSize);

        #[method(setThreadgroupMemoryLength:offset:atIndex:)]
        pub unsafe fn setThreadgroupMemoryLength_offset_atIndex(
            &self,
            length: NSUInteger,
            offset: NSUInteger,
            index: NSUInteger,
        );

        #[method(useResource:usage:)]
        pub fn useResource_usage(
            &self,
            resource: &Metal::MTLResource,
            usage: Metal::MTLResourceUsage,
        );

        #[method(useResources:count:usage:)]
        pub unsafe fn useResources_count_usage(
            &self,
            resources: NonNull<NonNull<Metal::MTLResource>>,
            count: NSUInteger,
            usage: Metal::MTLResourceUsage,
        );

        #[method(useResource:usage:stages:)]
        pub fn useResource_usage_stages(
            &self,
            resource: &Metal::MTLResource,
            usage: Metal::MTLResourceUsage,
            stages: Metal::MTLRenderStages,
        );

        #[method(useResources:count:usage:stages:)]
        pub unsafe fn useResources_count_usage_stages(
            &self,
            resources: NonNull<NonNull<Metal::MTLResource>>,
            count: NSUInteger,
            usage: Metal::MTLResourceUsage,
            stages: Metal::MTLRenderStages,
        );

        #[method(useHeap:)]
        pub fn useHeap(&self, heap: &Metal::MTLHeap);

        #[method(useHeaps:count:)]
        pub unsafe fn useHeaps_count(
            &self,
            heaps: NonNull<NonNull<Metal::MTLHeap>>,
            count: NSUInteger,
        );

        #[method(useHeap:stages:)]
        pub fn useHeap_stages(&self, heap: &Metal::MTLHeap, stages: Metal::MTLRenderStages);

        #[method(useHeaps:count:stages:)]
        pub unsafe fn useHeaps_count_stages(
            &self,
            heaps: NonNull<NonNull<Metal::MTLHeap>>,
            count: NSUInteger,
            stages: Metal::MTLRenderStages,
        );

        #[method(executeCommandsInBuffer:withRange:)]
        pub unsafe fn executeCommandsInBuffer_withRange(
            &self,
            indirectCommandBuffer: &Metal::MTLIndirectCommandBuffer,
            executionRange: Foundation::NSRange,
        );

        #[method(executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:)]
        pub unsafe fn executeCommandsInBuffer_indirectBuffer_indirectBufferOffset(
            &self,
            indirectCommandbuffer: &Metal::MTLIndirectCommandBuffer,
            indirectRangeBuffer: &Metal::MTLBuffer,
            indirectBufferOffset: NSUInteger,
        );

        #[method(memoryBarrierWithScope:afterStages:beforeStages:)]
        pub unsafe fn memoryBarrierWithScope_afterStages_beforeStages(
            &self,
            scope: Metal::MTLBarrierScope,
            after: Metal::MTLRenderStages,
            before: Metal::MTLRenderStages,
        );

        #[method(memoryBarrierWithResources:count:afterStages:beforeStages:)]
        pub unsafe fn memoryBarrierWithResources_count_afterStages_beforeStages(
            &self,
            resources: NonNull<NonNull<Metal::MTLResource>>,
            count: NSUInteger,
            after: Metal::MTLRenderStages,
            before: Metal::MTLRenderStages,
        );

        #[method(sampleCountersInBuffer:atSampleIndex:withBarrier:)]
        pub unsafe fn sampleCountersInBuffer_atSampleIndex_withBarrier(
            &self,
            sampleBuffer: &Metal::MTLCounterSampleBuffer,
            sampleIndex: NSUInteger,
            barrier: bool,
        );
    }
);
