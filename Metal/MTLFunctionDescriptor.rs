//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

ns_options!(
    #[underlying(NSUInteger)]
    pub enum MTLFunctionOptions {
        MTLFunctionOptionNone = 0,
        MTLFunctionOptionCompileToBinary = 1 << 0,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionDescriptor;

    unsafe impl ClassType for MTLFunctionDescriptor {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLFunctionDescriptor {
        #[method_id(@__retain_semantics Other functionDescriptor)]
        pub fn functionDescriptor() -> Id<MTLFunctionDescriptor, Shared>;

        #[method_id(@__retain_semantics Other name)]
        pub fn name(&self) -> Option<Id<NSString, Shared>>;

        #[method(setName:)]
        pub fn setName(&self, name: Option<&NSString>);

        #[method_id(@__retain_semantics Other specializedName)]
        pub fn specializedName(&self) -> Option<Id<NSString, Shared>>;

        #[method(setSpecializedName:)]
        pub fn setSpecializedName(&self, specializedName: Option<&NSString>);

        #[method_id(@__retain_semantics Other constantValues)]
        pub fn constantValues(&self) -> Option<Id<MTLFunctionConstantValues, Shared>>;

        #[method(setConstantValues:)]
        pub fn setConstantValues(&self, constantValues: Option<&MTLFunctionConstantValues>);

        #[method(options)]
        pub fn options(&self) -> MTLFunctionOptions;

        #[method(setOptions:)]
        pub fn setOptions(&self, options: MTLFunctionOptions);

        #[method_id(@__retain_semantics Other binaryArchives)]
        pub unsafe fn binaryArchives(&self) -> Option<Id<NSArray<MTLBinaryArchive>, Shared>>;

        #[method(setBinaryArchives:)]
        pub unsafe fn setBinaryArchives(&self, binaryArchives: Option<&NSArray<MTLBinaryArchive>>);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLIntersectionFunctionDescriptor;

    unsafe impl ClassType for MTLIntersectionFunctionDescriptor {
        #[inherits(NSObject)]
        type Super = MTLFunctionDescriptor;
    }
);

extern_methods!(
    unsafe impl MTLIntersectionFunctionDescriptor {}
);
