//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

extern_protocol!(
    pub struct MTLFunctionStitchingAttribute;

    unsafe impl ProtocolType for MTLFunctionStitchingAttribute {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionStitchingAttributeAlwaysInline;

    unsafe impl ClassType for MTLFunctionStitchingAttributeAlwaysInline {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLFunctionStitchingAttributeAlwaysInline {}
);

extern_protocol!(
    pub struct MTLFunctionStitchingNode;

    unsafe impl ProtocolType for MTLFunctionStitchingNode {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionStitchingInputNode;

    unsafe impl ClassType for MTLFunctionStitchingInputNode {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLFunctionStitchingInputNode {
        #[method(argumentIndex)]
        pub unsafe fn argumentIndex(&self) -> NSUInteger;

        #[method(setArgumentIndex:)]
        pub unsafe fn setArgumentIndex(&self, argumentIndex: NSUInteger);

        #[method_id(@__retain_semantics Init initWithArgumentIndex:)]
        pub unsafe fn initWithArgumentIndex(
            this: Option<Allocated<Self>>,
            argument: NSUInteger,
        ) -> Id<Self, Shared>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionStitchingFunctionNode;

    unsafe impl ClassType for MTLFunctionStitchingFunctionNode {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLFunctionStitchingFunctionNode {
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Id<NSString, Shared>;

        #[method(setName:)]
        pub unsafe fn setName(&self, name: &NSString);

        #[method_id(@__retain_semantics Other arguments)]
        pub unsafe fn arguments(&self) -> Id<NSArray<MTLFunctionStitchingNode>, Shared>;

        #[method(setArguments:)]
        pub unsafe fn setArguments(&self, arguments: &NSArray<MTLFunctionStitchingNode>);

        #[method_id(@__retain_semantics Other controlDependencies)]
        pub unsafe fn controlDependencies(
            &self,
        ) -> Id<NSArray<MTLFunctionStitchingFunctionNode>, Shared>;

        #[method(setControlDependencies:)]
        pub unsafe fn setControlDependencies(
            &self,
            controlDependencies: &NSArray<MTLFunctionStitchingFunctionNode>,
        );

        #[method_id(@__retain_semantics Init initWithName:arguments:controlDependencies:)]
        pub unsafe fn initWithName_arguments_controlDependencies(
            this: Option<Allocated<Self>>,
            name: &NSString,
            arguments: &NSArray<MTLFunctionStitchingNode>,
            controlDependencies: &NSArray<MTLFunctionStitchingFunctionNode>,
        ) -> Id<Self, Shared>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLFunctionStitchingGraph;

    unsafe impl ClassType for MTLFunctionStitchingGraph {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLFunctionStitchingGraph {
        #[method_id(@__retain_semantics Other functionName)]
        pub unsafe fn functionName(&self) -> Id<NSString, Shared>;

        #[method(setFunctionName:)]
        pub unsafe fn setFunctionName(&self, functionName: &NSString);

        #[method_id(@__retain_semantics Other nodes)]
        pub unsafe fn nodes(&self) -> Id<NSArray<MTLFunctionStitchingFunctionNode>, Shared>;

        #[method(setNodes:)]
        pub unsafe fn setNodes(&self, nodes: &NSArray<MTLFunctionStitchingFunctionNode>);

        #[method_id(@__retain_semantics Other outputNode)]
        pub unsafe fn outputNode(&self) -> Option<Id<MTLFunctionStitchingFunctionNode, Shared>>;

        #[method(setOutputNode:)]
        pub unsafe fn setOutputNode(&self, outputNode: Option<&MTLFunctionStitchingFunctionNode>);

        #[method_id(@__retain_semantics Other attributes)]
        pub unsafe fn attributes(&self) -> Id<NSArray<MTLFunctionStitchingAttribute>, Shared>;

        #[method(setAttributes:)]
        pub unsafe fn setAttributes(&self, attributes: &NSArray<MTLFunctionStitchingAttribute>);

        #[method_id(@__retain_semantics Init initWithFunctionName:nodes:outputNode:attributes:)]
        pub unsafe fn initWithFunctionName_nodes_outputNode_attributes(
            this: Option<Allocated<Self>>,
            functionName: &NSString,
            nodes: &NSArray<MTLFunctionStitchingFunctionNode>,
            outputNode: Option<&MTLFunctionStitchingFunctionNode>,
            attributes: &NSArray<MTLFunctionStitchingAttribute>,
        ) -> Id<Self, Shared>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MTLStitchedLibraryDescriptor;

    unsafe impl ClassType for MTLStitchedLibraryDescriptor {
        type Super = NSObject;
    }
);

extern_methods!(
    unsafe impl MTLStitchedLibraryDescriptor {
        #[method_id(@__retain_semantics Other functionGraphs)]
        pub unsafe fn functionGraphs(&self) -> Id<NSArray<MTLFunctionStitchingGraph>, Shared>;

        #[method(setFunctionGraphs:)]
        pub unsafe fn setFunctionGraphs(&self, functionGraphs: &NSArray<MTLFunctionStitchingGraph>);

        #[method_id(@__retain_semantics Other functions)]
        pub unsafe fn functions(&self) -> Id<NSArray<MTLFunction>, Shared>;

        #[method(setFunctions:)]
        pub unsafe fn setFunctions(&self, functions: &NSArray<MTLFunction>);
    }
);
