//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MLCompute::*;
use crate::Metal::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MLCompute_MLCActivationDescriptor")]
    pub struct MLCActivationDescriptor;

    #[cfg(feature = "MLCompute_MLCActivationDescriptor")]
    unsafe impl ClassType for MLCActivationDescriptor {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "MLCompute_MLCActivationDescriptor")]
unsafe impl NSCopying for MLCActivationDescriptor {}

#[cfg(feature = "MLCompute_MLCActivationDescriptor")]
unsafe impl NSObjectProtocol for MLCActivationDescriptor {}

extern_methods!(
    #[cfg(feature = "MLCompute_MLCActivationDescriptor")]
    unsafe impl MLCActivationDescriptor {
        #[method(activationType)]
        pub unsafe fn activationType(&self) -> MLCActivationType;

        #[method(a)]
        pub unsafe fn a(&self) -> c_float;

        #[method(b)]
        pub unsafe fn b(&self) -> c_float;

        #[method(c)]
        pub unsafe fn c(&self) -> c_float;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics Other descriptorWithType:)]
        pub unsafe fn descriptorWithType(activation_type: MLCActivationType) -> Option<Id<Self>>;

        #[method_id(@__retain_semantics Other descriptorWithType:a:)]
        pub unsafe fn descriptorWithType_a(
            activation_type: MLCActivationType,
            a: c_float,
        ) -> Option<Id<Self>>;

        #[method_id(@__retain_semantics Other descriptorWithType:a:b:)]
        pub unsafe fn descriptorWithType_a_b(
            activation_type: MLCActivationType,
            a: c_float,
            b: c_float,
        ) -> Option<Id<Self>>;

        #[method_id(@__retain_semantics Other descriptorWithType:a:b:c:)]
        pub unsafe fn descriptorWithType_a_b_c(
            activation_type: MLCActivationType,
            a: c_float,
            b: c_float,
            c: c_float,
        ) -> Option<Id<Self>>;
    }
);
