//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::MLCompute::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MLCompute_MLCConcatenationLayer")]
    pub struct MLCConcatenationLayer;

    #[cfg(feature = "MLCompute_MLCConcatenationLayer")]
    unsafe impl ClassType for MLCConcatenationLayer {
        #[inherits(NSObject)]
        type Super = MLCLayer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "MLCompute_MLCConcatenationLayer")]
unsafe impl NSObjectProtocol for MLCConcatenationLayer {}

extern_methods!(
    #[cfg(feature = "MLCompute_MLCConcatenationLayer")]
    unsafe impl MLCConcatenationLayer {
        #[method(dimension)]
        pub unsafe fn dimension(&self, ) -> NSUInteger;

        #[method_id(@__retain_semantics Other layer)]
        pub unsafe fn layer() -> Id<Self>;

        #[method_id(@__retain_semantics Other layerWithDimension:)]
        pub unsafe fn layerWithDimension(dimension: NSUInteger,) -> Id<Self>;

    }
);

extern_methods!(
    /// Methods declared on superclass `MLCLayer`
    #[cfg(feature = "MLCompute_MLCConcatenationLayer")]
    unsafe impl MLCConcatenationLayer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>, ) -> Id<Self>;

    }
);

