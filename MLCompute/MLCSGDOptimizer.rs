//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MLCompute::*;
use crate::Metal::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MLCompute_MLCSGDOptimizer")]
    pub struct MLCSGDOptimizer;

    #[cfg(feature = "MLCompute_MLCSGDOptimizer")]
    unsafe impl ClassType for MLCSGDOptimizer {
        #[inherits(NSObject)]
        type Super = MLCOptimizer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "MLCompute_MLCSGDOptimizer")]
unsafe impl NSCopying for MLCSGDOptimizer {}

#[cfg(feature = "MLCompute_MLCSGDOptimizer")]
unsafe impl NSObjectProtocol for MLCSGDOptimizer {}

extern_methods!(
    #[cfg(feature = "MLCompute_MLCSGDOptimizer")]
    unsafe impl MLCSGDOptimizer {
        #[method(momentumScale)]
        pub unsafe fn momentumScale(&self) -> c_float;

        #[method(usesNesterovMomentum)]
        pub unsafe fn usesNesterovMomentum(&self) -> bool;

        #[cfg(feature = "MLCompute_MLCOptimizerDescriptor")]
        #[method_id(@__retain_semantics Other optimizerWithDescriptor:)]
        pub unsafe fn optimizerWithDescriptor(
            optimizer_descriptor: &MLCOptimizerDescriptor,
        ) -> Id<Self>;

        #[cfg(feature = "MLCompute_MLCOptimizerDescriptor")]
        #[method_id(@__retain_semantics Other optimizerWithDescriptor:momentumScale:usesNesterovMomentum:)]
        pub unsafe fn optimizerWithDescriptor_momentumScale_usesNesterovMomentum(
            optimizer_descriptor: &MLCOptimizerDescriptor,
            momentum_scale: c_float,
            uses_nesterov_momentum: bool,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MLCOptimizer`
    #[cfg(feature = "MLCompute_MLCSGDOptimizer")]
    unsafe impl MLCSGDOptimizer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);
