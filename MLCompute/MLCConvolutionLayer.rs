//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MLCompute::*;
use crate::Metal::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MLCompute_MLCConvolutionLayer")]
    pub struct MLCConvolutionLayer;

    #[cfg(feature = "MLCompute_MLCConvolutionLayer")]
    unsafe impl ClassType for MLCConvolutionLayer {
        #[inherits(NSObject)]
        type Super = MLCLayer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "MLCompute_MLCConvolutionLayer")]
unsafe impl NSObjectProtocol for MLCConvolutionLayer {}

extern_methods!(
    #[cfg(feature = "MLCompute_MLCConvolutionLayer")]
    unsafe impl MLCConvolutionLayer {
        #[cfg(feature = "MLCompute_MLCConvolutionDescriptor")]
        #[method_id(@__retain_semantics Other descriptor)]
        pub unsafe fn descriptor(&self) -> Id<MLCConvolutionDescriptor>;

        #[cfg(feature = "MLCompute_MLCTensor")]
        #[method_id(@__retain_semantics Other weights)]
        pub unsafe fn weights(&self) -> Id<MLCTensor>;

        #[cfg(feature = "MLCompute_MLCTensor")]
        #[method_id(@__retain_semantics Other biases)]
        pub unsafe fn biases(&self) -> Option<Id<MLCTensor>>;

        #[cfg(feature = "MLCompute_MLCTensorParameter")]
        #[method_id(@__retain_semantics Other weightsParameter)]
        pub unsafe fn weightsParameter(&self) -> Id<MLCTensorParameter>;

        #[cfg(feature = "MLCompute_MLCTensorParameter")]
        #[method_id(@__retain_semantics Other biasesParameter)]
        pub unsafe fn biasesParameter(&self) -> Option<Id<MLCTensorParameter>>;

        #[cfg(all(
            feature = "MLCompute_MLCConvolutionDescriptor",
            feature = "MLCompute_MLCTensor"
        ))]
        #[method_id(@__retain_semantics Other layerWithWeights:biases:descriptor:)]
        pub unsafe fn layerWithWeights_biases_descriptor(
            weights: &MLCTensor,
            biases: Option<&MLCTensor>,
            descriptor: &MLCConvolutionDescriptor,
        ) -> Option<Id<Self>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `MLCLayer`
    #[cfg(feature = "MLCompute_MLCConvolutionLayer")]
    unsafe impl MLCConvolutionLayer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);
