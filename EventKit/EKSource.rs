//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "EventKit_EKSource")]
    pub struct EKSource;

    #[cfg(feature = "EventKit_EKSource")]
    unsafe impl ClassType for EKSource {
        #[inherits(NSObject)]
        type Super = EKObject;
    }
);

extern_methods!(
    #[cfg(feature = "EventKit_EKSource")]
    unsafe impl EKSource {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other sourceIdentifier)]
        pub unsafe fn sourceIdentifier(&self) -> Id<NSString, Shared>;

        #[method(sourceType)]
        pub unsafe fn sourceType(&self) -> EKSourceType;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Id<NSString, Shared>;

        #[cfg(all(feature = "EventKit_EKCalendar", feature = "Foundation_NSSet"))]
        #[method_id(@__retain_semantics Other calendars)]
        pub unsafe fn calendars(&self) -> Id<NSSet<EKCalendar>, Shared>;

        #[cfg(all(feature = "EventKit_EKCalendar", feature = "Foundation_NSSet"))]
        #[method_id(@__retain_semantics Other calendarsForEntityType:)]
        pub unsafe fn calendarsForEntityType(
            &self,
            entity_type: EKEntityType,
        ) -> Id<NSSet<EKCalendar>, Shared>;

        #[method(isDelegate)]
        pub unsafe fn isDelegate(&self) -> bool;
    }
);
