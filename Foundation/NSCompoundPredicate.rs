//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum NSCompoundPredicateType {
        NSNotPredicateType = 0,
        NSAndPredicateType = 1,
        NSOrPredicateType = 2,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSCompoundPredicate;

    unsafe impl ClassType for NSCompoundPredicate {
        #[inherits(NSObject)]
        type Super = Foundation::NSPredicate;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSCompoundPredicate")]
    unsafe impl NSCompoundPredicate {
        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Init initWithType:subpredicates:)]
        pub unsafe fn initWithType_subpredicates(
            this: Option<Allocated<Self>>,
            type_: NSCompoundPredicateType,
            subpredicates: &Foundation::NSArray<Foundation::NSPredicate>,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &Foundation::NSCoder,
        ) -> Option<Id<Self, Shared>>;

        #[method(compoundPredicateType)]
        pub unsafe fn compoundPredicateType(&self) -> NSCompoundPredicateType;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other subpredicates)]
        pub unsafe fn subpredicates(&self) -> Id<Foundation::NSArray, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other andPredicateWithSubpredicates:)]
        pub unsafe fn andPredicateWithSubpredicates(
            subpredicates: &Foundation::NSArray<Foundation::NSPredicate>,
        ) -> Id<Foundation::NSCompoundPredicate, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other orPredicateWithSubpredicates:)]
        pub unsafe fn orPredicateWithSubpredicates(
            subpredicates: &Foundation::NSArray<Foundation::NSPredicate>,
        ) -> Id<Foundation::NSCompoundPredicate, Shared>;

        #[method_id(@__retain_semantics Other notPredicateWithSubpredicate:)]
        pub unsafe fn notPredicateWithSubpredicate(
            predicate: &Foundation::NSPredicate,
        ) -> Id<Foundation::NSCompoundPredicate, Shared>;
    }
);
