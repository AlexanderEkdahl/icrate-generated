//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_static!(NSAppleScriptErrorMessage: &'static Foundation::NSString);

extern_static!(NSAppleScriptErrorNumber: &'static Foundation::NSString);

extern_static!(NSAppleScriptErrorAppName: &'static Foundation::NSString);

extern_static!(NSAppleScriptErrorBriefMessage: &'static Foundation::NSString);

extern_static!(NSAppleScriptErrorRange: &'static Foundation::NSString);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSAppleScript;

    unsafe impl ClassType for NSAppleScript {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSAppleScript")]
    unsafe impl NSAppleScript {
        #[cfg(all(
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "Foundation_NSURL"
        ))]
        #[method_id(@__retain_semantics Init initWithContentsOfURL:error:)]
        pub unsafe fn initWithContentsOfURL_error(
            this: Option<Allocated<Self>>,
            url: &Foundation::NSURL,
            errorInfo: *mut *mut Foundation::NSDictionary<Foundation::NSString, Object>,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithSource:)]
        pub unsafe fn initWithSource(
            this: Option<Allocated<Self>>,
            source: &Foundation::NSString,
        ) -> Option<Id<Self, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other source)]
        pub unsafe fn source(&self) -> Option<Id<Foundation::NSString, Shared>>;

        #[method(isCompiled)]
        pub unsafe fn isCompiled(&self) -> bool;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method(compileAndReturnError:)]
        pub unsafe fn compileAndReturnError(
            &self,
            errorInfo: *mut *mut Foundation::NSDictionary<Foundation::NSString, Object>,
        ) -> bool;

        #[cfg(all(
            feature = "Foundation_NSAppleEventDescriptor",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other executeAndReturnError:)]
        pub unsafe fn executeAndReturnError(
            &self,
            errorInfo: *mut *mut Foundation::NSDictionary<Foundation::NSString, Object>,
        ) -> Id<Foundation::NSAppleEventDescriptor, Shared>;

        #[cfg(all(
            feature = "Foundation_NSAppleEventDescriptor",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other executeAppleEvent:error:)]
        pub unsafe fn executeAppleEvent_error(
            &self,
            event: &Foundation::NSAppleEventDescriptor,
            errorInfo: *mut *mut Foundation::NSDictionary<Foundation::NSString, Object>,
        ) -> Id<Foundation::NSAppleEventDescriptor, Shared>;
    }
);
