//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

pub type NSPointPointer = *mut Foundation::NSPoint;

pub type NSPointArray = *mut Foundation::NSPoint;

pub type NSSizePointer = *mut Foundation::NSSize;

pub type NSSizeArray = *mut Foundation::NSSize;

pub type NSRectPointer = *mut Foundation::NSRect;

pub type NSRectArray = *mut Foundation::NSRect;

extern_struct!(
    pub struct NSEdgeInsets {
        pub top: CoreGraphics::CGFloat,
        pub left: CoreGraphics::CGFloat,
        pub bottom: CoreGraphics::CGFloat,
        pub right: CoreGraphics::CGFloat,
    }
);

ns_options!(
    #[underlying(c_ulonglong)]
    pub enum NSAlignmentOptions {
        NSAlignMinXInward = 1 << 0,
        NSAlignMinYInward = 1 << 1,
        NSAlignMaxXInward = 1 << 2,
        NSAlignMaxYInward = 1 << 3,
        NSAlignWidthInward = 1 << 4,
        NSAlignHeightInward = 1 << 5,
        NSAlignMinXOutward = 1 << 8,
        NSAlignMinYOutward = 1 << 9,
        NSAlignMaxXOutward = 1 << 10,
        NSAlignMaxYOutward = 1 << 11,
        NSAlignWidthOutward = 1 << 12,
        NSAlignHeightOutward = 1 << 13,
        NSAlignMinXNearest = 1 << 16,
        NSAlignMinYNearest = 1 << 17,
        NSAlignMaxXNearest = 1 << 18,
        NSAlignMaxYNearest = 1 << 19,
        NSAlignWidthNearest = 1 << 20,
        NSAlignHeightNearest = 1 << 21,
        NSAlignRectFlipped = 1 << 63,
        NSAlignAllEdgesInward =
            NSAlignMinXInward | NSAlignMaxXInward | NSAlignMinYInward | NSAlignMaxYInward,
        NSAlignAllEdgesOutward =
            NSAlignMinXOutward | NSAlignMaxXOutward | NSAlignMinYOutward | NSAlignMaxYOutward,
        NSAlignAllEdgesNearest =
            NSAlignMinXNearest | NSAlignMaxXNearest | NSAlignMinYNearest | NSAlignMaxYNearest,
    }
);

extern_static!(NSZeroPoint: Foundation::NSPoint);

extern_static!(NSZeroSize: Foundation::NSSize);

extern_static!(NSZeroRect: Foundation::NSRect);

extern_static!(NSEdgeInsetsZero: Foundation::NSEdgeInsets);

inline_fn!(
    pub unsafe fn NSMakePoint(
        x: CoreGraphics::CGFloat,
        y: CoreGraphics::CGFloat,
    ) -> Foundation::NSPoint {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMakeSize(
        w: CoreGraphics::CGFloat,
        h: CoreGraphics::CGFloat,
    ) -> Foundation::NSSize {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMakeRect(
        x: CoreGraphics::CGFloat,
        y: CoreGraphics::CGFloat,
        w: CoreGraphics::CGFloat,
        h: CoreGraphics::CGFloat,
    ) -> Foundation::NSRect {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMaxX(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMaxY(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMidX(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMidY(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMinX(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSMinY(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSWidth(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSHeight(aRect: Foundation::NSRect) -> CoreGraphics::CGFloat {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSRectFromCGRect(cgrect: CoreGraphics::CGRect) -> Foundation::NSRect {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSRectToCGRect(nsrect: Foundation::NSRect) -> CoreGraphics::CGRect {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSPointFromCGPoint(cgpoint: CoreGraphics::CGPoint) -> Foundation::NSPoint {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSPointToCGPoint(nspoint: Foundation::NSPoint) -> CoreGraphics::CGPoint {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSSizeFromCGSize(cgsize: CoreGraphics::CGSize) -> Foundation::NSSize {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSSizeToCGSize(nssize: Foundation::NSSize) -> CoreGraphics::CGSize {
        todo!()
    }
);

inline_fn!(
    pub unsafe fn NSEdgeInsetsMake(
        top: CoreGraphics::CGFloat,
        left: CoreGraphics::CGFloat,
        bottom: CoreGraphics::CGFloat,
        right: CoreGraphics::CGFloat,
    ) -> Foundation::NSEdgeInsets {
        todo!()
    }
);

extern_fn!(
    pub unsafe fn NSEqualPoints(aPoint: Foundation::NSPoint, bPoint: Foundation::NSPoint) -> Bool;
);

extern_fn!(
    pub unsafe fn NSEqualSizes(aSize: Foundation::NSSize, bSize: Foundation::NSSize) -> Bool;
);

extern_fn!(
    pub unsafe fn NSEqualRects(aRect: Foundation::NSRect, bRect: Foundation::NSRect) -> Bool;
);

extern_fn!(
    pub unsafe fn NSIsEmptyRect(aRect: Foundation::NSRect) -> Bool;
);

extern_fn!(
    pub unsafe fn NSEdgeInsetsEqual(
        aInsets: Foundation::NSEdgeInsets,
        bInsets: Foundation::NSEdgeInsets,
    ) -> Bool;
);

extern_fn!(
    pub unsafe fn NSInsetRect(
        aRect: Foundation::NSRect,
        dX: CoreGraphics::CGFloat,
        dY: CoreGraphics::CGFloat,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSIntegralRect(aRect: Foundation::NSRect) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSIntegralRectWithOptions(
        aRect: Foundation::NSRect,
        opts: Foundation::NSAlignmentOptions,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSUnionRect(
        aRect: Foundation::NSRect,
        bRect: Foundation::NSRect,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSIntersectionRect(
        aRect: Foundation::NSRect,
        bRect: Foundation::NSRect,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSOffsetRect(
        aRect: Foundation::NSRect,
        dX: CoreGraphics::CGFloat,
        dY: CoreGraphics::CGFloat,
    ) -> Foundation::NSRect;
);

extern_fn!(
    pub unsafe fn NSDivideRect(
        inRect: Foundation::NSRect,
        slice: NonNull<Foundation::NSRect>,
        rem: NonNull<Foundation::NSRect>,
        amount: CoreGraphics::CGFloat,
        edge: Foundation::NSRectEdge,
    );
);

extern_fn!(
    pub unsafe fn NSPointInRect(aPoint: Foundation::NSPoint, aRect: Foundation::NSRect) -> Bool;
);

extern_fn!(
    pub unsafe fn NSMouseInRect(
        aPoint: Foundation::NSPoint,
        aRect: Foundation::NSRect,
        flipped: Bool,
    ) -> Bool;
);

extern_fn!(
    pub unsafe fn NSContainsRect(aRect: Foundation::NSRect, bRect: Foundation::NSRect) -> Bool;
);

extern_fn!(
    pub unsafe fn NSIntersectsRect(aRect: Foundation::NSRect, bRect: Foundation::NSRect) -> Bool;
);

extern_fn!(
    pub unsafe fn NSStringFromPoint(aPoint: Foundation::NSPoint) -> NonNull<Foundation::NSString>;
);

extern_fn!(
    pub unsafe fn NSStringFromSize(aSize: Foundation::NSSize) -> NonNull<Foundation::NSString>;
);

extern_fn!(
    pub unsafe fn NSStringFromRect(aRect: Foundation::NSRect) -> NonNull<Foundation::NSString>;
);

extern_fn!(
    pub unsafe fn NSPointFromString(aString: &Foundation::NSString) -> Foundation::NSPoint;
);

extern_fn!(
    pub unsafe fn NSSizeFromString(aString: &Foundation::NSString) -> Foundation::NSSize;
);

extern_fn!(
    pub unsafe fn NSRectFromString(aString: &Foundation::NSString) -> Foundation::NSRect;
);

extern_methods!(
    /// NSValueGeometryExtensions
    #[cfg(feature = "Foundation_NSValue")]
    unsafe impl Foundation::NSValue {
        #[method_id(@__retain_semantics Other valueWithPoint:)]
        pub unsafe fn valueWithPoint(point: Foundation::NSPoint)
            -> Id<Foundation::NSValue, Shared>;

        #[method_id(@__retain_semantics Other valueWithSize:)]
        pub unsafe fn valueWithSize(size: Foundation::NSSize) -> Id<Foundation::NSValue, Shared>;

        #[method_id(@__retain_semantics Other valueWithRect:)]
        pub unsafe fn valueWithRect(rect: Foundation::NSRect) -> Id<Foundation::NSValue, Shared>;

        #[method_id(@__retain_semantics Other valueWithEdgeInsets:)]
        pub unsafe fn valueWithEdgeInsets(
            insets: Foundation::NSEdgeInsets,
        ) -> Id<Foundation::NSValue, Shared>;

        #[method(pointValue)]
        pub unsafe fn pointValue(&self) -> Foundation::NSPoint;

        #[method(sizeValue)]
        pub unsafe fn sizeValue(&self) -> Foundation::NSSize;

        #[method(rectValue)]
        pub unsafe fn rectValue(&self) -> Foundation::NSRect;

        #[method(edgeInsetsValue)]
        pub unsafe fn edgeInsetsValue(&self) -> Foundation::NSEdgeInsets;
    }
);

extern_methods!(
    /// NSGeometryCoding
    #[cfg(feature = "Foundation_NSCoder")]
    unsafe impl Foundation::NSCoder {
        #[method(encodePoint:)]
        pub unsafe fn encodePoint(&self, point: Foundation::NSPoint);

        #[method(decodePoint)]
        pub unsafe fn decodePoint(&self) -> Foundation::NSPoint;

        #[method(encodeSize:)]
        pub unsafe fn encodeSize(&self, size: Foundation::NSSize);

        #[method(decodeSize)]
        pub unsafe fn decodeSize(&self) -> Foundation::NSSize;

        #[method(encodeRect:)]
        pub unsafe fn encodeRect(&self, rect: Foundation::NSRect);

        #[method(decodeRect)]
        pub unsafe fn decodeRect(&self) -> Foundation::NSRect;
    }
);

extern_methods!(
    /// NSGeometryKeyedCoding
    #[cfg(feature = "Foundation_NSCoder")]
    unsafe impl Foundation::NSCoder {
        #[cfg(feature = "Foundation_NSString")]
        #[method(encodePoint:forKey:)]
        pub unsafe fn encodePoint_forKey(
            &self,
            point: Foundation::NSPoint,
            key: &Foundation::NSString,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method(encodeSize:forKey:)]
        pub unsafe fn encodeSize_forKey(
            &self,
            size: Foundation::NSSize,
            key: &Foundation::NSString,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method(encodeRect:forKey:)]
        pub unsafe fn encodeRect_forKey(
            &self,
            rect: Foundation::NSRect,
            key: &Foundation::NSString,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method(decodePointForKey:)]
        pub unsafe fn decodePointForKey(&self, key: &Foundation::NSString) -> Foundation::NSPoint;

        #[cfg(feature = "Foundation_NSString")]
        #[method(decodeSizeForKey:)]
        pub unsafe fn decodeSizeForKey(&self, key: &Foundation::NSString) -> Foundation::NSSize;

        #[cfg(feature = "Foundation_NSString")]
        #[method(decodeRectForKey:)]
        pub unsafe fn decodeRectForKey(&self, key: &Foundation::NSString) -> Foundation::NSRect;
    }
);
