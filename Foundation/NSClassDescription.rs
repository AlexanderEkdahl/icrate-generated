//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSClassDescription;

    unsafe impl ClassType for NSClassDescription {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSClassDescription")]
    unsafe impl NSClassDescription {
        #[method(registerClassDescription:forClass:)]
        pub unsafe fn registerClassDescription_forClass(
            description: &Foundation::NSClassDescription,
            aClass: &Class,
        );

        #[method(invalidateClassDescriptionCache)]
        pub unsafe fn invalidateClassDescriptionCache();

        #[method_id(@__retain_semantics Other classDescriptionForClass:)]
        pub unsafe fn classDescriptionForClass(
            aClass: &Class,
        ) -> Option<Id<Foundation::NSClassDescription, Shared>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other attributeKeys)]
        pub unsafe fn attributeKeys(&self)
            -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other toOneRelationshipKeys)]
        pub unsafe fn toOneRelationshipKeys(
            &self,
        ) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other toManyRelationshipKeys)]
        pub unsafe fn toManyRelationshipKeys(
            &self,
        ) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other inverseForRelationshipKey:)]
        pub unsafe fn inverseForRelationshipKey(
            &self,
            relationshipKey: &Foundation::NSString,
        ) -> Option<Id<Foundation::NSString, Shared>>;
    }
);

extern_static!(
    NSClassDescriptionNeededForClassNotification: &'static Foundation::NSNotificationName
);
