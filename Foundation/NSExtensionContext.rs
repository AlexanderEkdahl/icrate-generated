//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSExtensionContext;

    unsafe impl ClassType for NSExtensionContext {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSExtensionContext")]
    unsafe impl NSExtensionContext {
        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other inputItems)]
        pub unsafe fn inputItems(&self) -> Id<Foundation::NSArray, Shared>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method(completeRequestReturningItems:completionHandler:)]
        pub unsafe fn completeRequestReturningItems_completionHandler(
            &self,
            items: Option<&Foundation::NSArray>,
            completionHandler: Option<&Block<(Bool,), ()>>,
        );

        #[cfg(feature = "Foundation_NSError")]
        #[method(cancelRequestWithError:)]
        pub unsafe fn cancelRequestWithError(&self, error: &Foundation::NSError);

        #[cfg(feature = "Foundation_NSURL")]
        #[method(openURL:completionHandler:)]
        pub unsafe fn openURL_completionHandler(
            &self,
            URL: &Foundation::NSURL,
            completionHandler: Option<&Block<(Bool,), ()>>,
        );
    }
);

extern_static!(NSExtensionItemsAndErrorsKey: Option<&'static Foundation::NSString>);

extern_static!(
    NSExtensionHostWillEnterForegroundNotification: Option<&'static Foundation::NSString>
);

extern_static!(
    NSExtensionHostDidEnterBackgroundNotification: Option<&'static Foundation::NSString>
);

extern_static!(NSExtensionHostWillResignActiveNotification: Option<&'static Foundation::NSString>);

extern_static!(NSExtensionHostDidBecomeActiveNotification: Option<&'static Foundation::NSString>);
