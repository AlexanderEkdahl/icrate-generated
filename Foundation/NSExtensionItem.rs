//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSExtensionItem;

    unsafe impl ClassType for NSExtensionItem {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSExtensionItem")]
    unsafe impl NSExtensionItem {
        #[cfg(feature = "Foundation_NSAttributedString")]
        #[method_id(@__retain_semantics Other attributedTitle)]
        pub unsafe fn attributedTitle(&self) -> Option<Id<Foundation::NSAttributedString, Shared>>;

        #[cfg(feature = "Foundation_NSAttributedString")]
        #[method(setAttributedTitle:)]
        pub unsafe fn setAttributedTitle(
            &self,
            attributedTitle: Option<&Foundation::NSAttributedString>,
        );

        #[cfg(feature = "Foundation_NSAttributedString")]
        #[method_id(@__retain_semantics Other attributedContentText)]
        pub unsafe fn attributedContentText(
            &self,
        ) -> Option<Id<Foundation::NSAttributedString, Shared>>;

        #[cfg(feature = "Foundation_NSAttributedString")]
        #[method(setAttributedContentText:)]
        pub unsafe fn setAttributedContentText(
            &self,
            attributedContentText: Option<&Foundation::NSAttributedString>,
        );

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSItemProvider"))]
        #[method_id(@__retain_semantics Other attachments)]
        pub unsafe fn attachments(
            &self,
        ) -> Option<Id<Foundation::NSArray<Foundation::NSItemProvider>, Shared>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSItemProvider"))]
        #[method(setAttachments:)]
        pub unsafe fn setAttachments(
            &self,
            attachments: Option<&Foundation::NSArray<Foundation::NSItemProvider>>,
        );

        #[cfg(feature = "Foundation_NSDictionary")]
        #[method_id(@__retain_semantics Other userInfo)]
        pub unsafe fn userInfo(&self) -> Option<Id<Foundation::NSDictionary, Shared>>;

        #[cfg(feature = "Foundation_NSDictionary")]
        #[method(setUserInfo:)]
        pub unsafe fn setUserInfo(&self, userInfo: Option<&Foundation::NSDictionary>);
    }
);

extern_static!(NSExtensionItemAttributedTitleKey: Option<&'static Foundation::NSString>);

extern_static!(NSExtensionItemAttributedContentTextKey: Option<&'static Foundation::NSString>);

extern_static!(NSExtensionItemAttachmentsKey: Option<&'static Foundation::NSString>);
