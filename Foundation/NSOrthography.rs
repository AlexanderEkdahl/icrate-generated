//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSOrthography;

    unsafe impl ClassType for NSOrthography {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSOrthography")]
    unsafe impl NSOrthography {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other dominantScript)]
        pub unsafe fn dominantScript(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other languageMap)]
        pub unsafe fn languageMap(
            &self,
        ) -> Id<
            Foundation::NSDictionary<
                Foundation::NSString,
                Foundation::NSArray<Foundation::NSString>,
            >,
            Shared,
        >;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Init initWithDominantScript:languageMap:)]
        pub unsafe fn initWithDominantScript_languageMap(
            this: Option<Allocated<Self>>,
            script: &Foundation::NSString,
            map: &Foundation::NSDictionary<
                Foundation::NSString,
                Foundation::NSArray<Foundation::NSString>,
            >,
        ) -> Id<Self, Shared>;

        #[cfg(feature = "Foundation_NSCoder")]
        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Option<Allocated<Self>>,
            coder: &Foundation::NSCoder,
        ) -> Option<Id<Self, Shared>>;
    }
);

extern_methods!(
    /// NSOrthographyExtended
    #[cfg(feature = "Foundation_NSOrthography")]
    unsafe impl NSOrthography {
        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other languagesForScript:)]
        pub unsafe fn languagesForScript(
            &self,
            script: &Foundation::NSString,
        ) -> Option<Id<Foundation::NSArray<Foundation::NSString>, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other dominantLanguageForScript:)]
        pub unsafe fn dominantLanguageForScript(
            &self,
            script: &Foundation::NSString,
        ) -> Option<Id<Foundation::NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other dominantLanguage)]
        pub unsafe fn dominantLanguage(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other allScripts)]
        pub unsafe fn allScripts(&self) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other allLanguages)]
        pub unsafe fn allLanguages(&self) -> Id<Foundation::NSArray<Foundation::NSString>, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other defaultOrthographyForLanguage:)]
        pub unsafe fn defaultOrthographyForLanguage(
            language: &Foundation::NSString,
        ) -> Id<Self, Shared>;
    }
);

extern_methods!(
    /// NSOrthographyCreation
    #[cfg(feature = "Foundation_NSOrthography")]
    unsafe impl NSOrthography {
        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other orthographyWithDominantScript:languageMap:)]
        pub unsafe fn orthographyWithDominantScript_languageMap(
            script: &Foundation::NSString,
            map: &Foundation::NSDictionary<
                Foundation::NSString,
                Foundation::NSArray<Foundation::NSString>,
            >,
        ) -> Id<Self, Shared>;
    }
);
