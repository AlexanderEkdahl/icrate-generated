//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPredicate;

    unsafe impl ClassType for NSPredicate {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSPredicate")]
    unsafe impl NSPredicate {
        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other predicateWithFormat:argumentArray:)]
        pub unsafe fn predicateWithFormat_argumentArray(
            predicateFormat: &Foundation::NSString,
            arguments: Option<&Foundation::NSArray>,
        ) -> Id<Foundation::NSPredicate, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other predicateFromMetadataQueryString:)]
        pub unsafe fn predicateFromMetadataQueryString(
            queryString: &Foundation::NSString,
        ) -> Option<Id<Foundation::NSPredicate, Shared>>;

        #[method_id(@__retain_semantics Other predicateWithValue:)]
        pub unsafe fn predicateWithValue(value: bool) -> Id<Foundation::NSPredicate, Shared>;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other predicateWithBlock:)]
        pub unsafe fn predicateWithBlock(
            block: &Block<
                (
                    *mut Object,
                    *mut Foundation::NSDictionary<Foundation::NSString, Object>,
                ),
                Bool,
            >,
        ) -> Id<Foundation::NSPredicate, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other predicateFormat)]
        pub unsafe fn predicateFormat(&self) -> Id<Foundation::NSString, Shared>;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other predicateWithSubstitutionVariables:)]
        pub unsafe fn predicateWithSubstitutionVariables(
            &self,
            variables: &Foundation::NSDictionary<Foundation::NSString, Object>,
        ) -> Id<Self, Shared>;

        #[method(evaluateWithObject:)]
        pub unsafe fn evaluateWithObject(&self, object: Option<&Object>) -> bool;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method(evaluateWithObject:substitutionVariables:)]
        pub unsafe fn evaluateWithObject_substitutionVariables(
            &self,
            object: Option<&Object>,
            bindings: Option<&Foundation::NSDictionary<Foundation::NSString, Object>>,
        ) -> bool;

        #[method(allowEvaluation)]
        pub unsafe fn allowEvaluation(&self);
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSArray")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSArray<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method_id(@__retain_semantics Other filteredArrayUsingPredicate:)]
        pub unsafe fn filteredArrayUsingPredicate(
            &self,
            predicate: &Foundation::NSPredicate,
        ) -> Id<Foundation::NSArray<ObjectType>, Shared>;
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSMutableArray")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSMutableArray<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method(filterUsingPredicate:)]
        pub unsafe fn filterUsingPredicate(&self, predicate: &Foundation::NSPredicate);
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSSet")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSSet<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method_id(@__retain_semantics Other filteredSetUsingPredicate:)]
        pub unsafe fn filteredSetUsingPredicate(
            &self,
            predicate: &Foundation::NSPredicate,
        ) -> Id<Foundation::NSSet<ObjectType>, Shared>;
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSMutableSet")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSMutableSet<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method(filterUsingPredicate:)]
        pub unsafe fn filterUsingPredicate(&self, predicate: &Foundation::NSPredicate);
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSOrderedSet")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSOrderedSet<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method_id(@__retain_semantics Other filteredOrderedSetUsingPredicate:)]
        pub unsafe fn filteredOrderedSetUsingPredicate(
            &self,
            p: &Foundation::NSPredicate,
        ) -> Id<Foundation::NSOrderedSet<ObjectType>, Shared>;
    }
);

extern_methods!(
    /// NSPredicateSupport
    #[cfg(feature = "Foundation_NSMutableOrderedSet")]
    unsafe impl<ObjectType: Message, ObjectTypeOwnership: Ownership>
        Foundation::NSMutableOrderedSet<ObjectType, ObjectTypeOwnership>
    {
        #[cfg(feature = "Foundation_NSPredicate")]
        #[method(filterUsingPredicate:)]
        pub unsafe fn filterUsingPredicate(&self, p: &Foundation::NSPredicate);
    }
);
