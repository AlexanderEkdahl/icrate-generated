//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum NSMassFormatterUnit {
        NSMassFormatterUnitGram = 11,
        NSMassFormatterUnitKilogram = 14,
        NSMassFormatterUnitOunce = (6 << 8) + 1,
        NSMassFormatterUnitPound = (6 << 8) + 2,
        NSMassFormatterUnitStone = (6 << 8) + 3,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSMassFormatter;

    unsafe impl ClassType for NSMassFormatter {
        #[inherits(NSObject)]
        type Super = Foundation::NSFormatter;
    }
);

extern_methods!(
    #[cfg(feature = "Foundation_NSMassFormatter")]
    unsafe impl NSMassFormatter {
        #[cfg(feature = "Foundation_NSNumberFormatter")]
        #[method_id(@__retain_semantics Other numberFormatter)]
        pub unsafe fn numberFormatter(&self) -> Id<Foundation::NSNumberFormatter, Shared>;

        #[cfg(feature = "Foundation_NSNumberFormatter")]
        #[method(setNumberFormatter:)]
        pub unsafe fn setNumberFormatter(
            &self,
            numberFormatter: Option<&Foundation::NSNumberFormatter>,
        );

        #[method(unitStyle)]
        pub unsafe fn unitStyle(&self) -> Foundation::NSFormattingUnitStyle;

        #[method(setUnitStyle:)]
        pub unsafe fn setUnitStyle(&self, unitStyle: Foundation::NSFormattingUnitStyle);

        #[method(isForPersonMassUse)]
        pub unsafe fn isForPersonMassUse(&self) -> bool;

        #[method(setForPersonMassUse:)]
        pub unsafe fn setForPersonMassUse(&self, forPersonMassUse: bool);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other stringFromValue:unit:)]
        pub unsafe fn stringFromValue_unit(
            &self,
            value: c_double,
            unit: Foundation::NSMassFormatterUnit,
        ) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other stringFromKilograms:)]
        pub unsafe fn stringFromKilograms(
            &self,
            numberInKilograms: c_double,
        ) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other unitStringFromValue:unit:)]
        pub unsafe fn unitStringFromValue_unit(
            &self,
            value: c_double,
            unit: Foundation::NSMassFormatterUnit,
        ) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other unitStringFromKilograms:usedUnit:)]
        pub unsafe fn unitStringFromKilograms_usedUnit(
            &self,
            numberInKilograms: c_double,
            unitp: *mut Foundation::NSMassFormatterUnit,
        ) -> Id<Foundation::NSString, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(getObjectValue:forString:errorDescription:)]
        pub unsafe fn getObjectValue_forString_errorDescription(
            &self,
            obj: *mut *mut Object,
            string: &Foundation::NSString,
            error: *mut *mut Foundation::NSString,
        ) -> bool;
    }
);
